{"version":3,"file":"hb-ng-form.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://hb-ng-form/lib/components/hb-form-widget.tpl.html","ng://hb-ng-form/lib/components/hb-form-widget.component.ts","ng://hb-ng-form/lib/components/hb-form-array.tpl.html","ng://hb-ng-form/lib/components/hb-form-array.component.ts","ng://hb-ng-form/lib/components/hb-form-mat-array.tpl.html","ng://hb-ng-form/lib/components/hb-form-mat-array.component.ts","ng://hb-ng-form/lib/components/hb-form-object.tpl.html","ng://hb-ng-form/lib/components/hb-form-object.component.ts","ng://hb-ng-form/lib/components/hb-form-mat-object.tpl.html","ng://hb-ng-form/lib/components/hb-form-mat-object.component.ts","ng://hb-ng-form/lib/components/hb-form-mat-widget.tpl.html","ng://hb-ng-form/lib/components/hb-form-mat-widget.component.ts","ng://hb-ng-form/lib/ObjectAttributeTypeExtractor.ts","ng://hb-ng-form/lib/class/decorators/FormConfig.ts","ng://hb-ng-form/lib/class/decorators/ArrayOptions.ts","ng://hb-ng-form/lib/class/decorators/ObjectOptions.ts","ng://hb-ng-form/lib/class/decorators/AutocompleteOptions.ts","ng://hb-ng-form/lib/class/decorators/ChoiceOptions.ts","ng://hb-ng-form/lib/class/decorators/MultipleChoicesOptions.ts","ng://hb-ng-form/lib/class/decorators/FlexibleObjectArray.ts","ng://hb-ng-form/lib/class/decorators/MatExtraOptions.ts","ng://hb-ng-form/lib/class/NgFormFactoryDecorators.ts","ng://hb-ng-form/lib/class/Ng2FormFactory.ts","ng://hb-ng-form/lib/pipe/MapToIterable.ts","ng://hb-ng-form/lib/HbFormModule.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div *ngIf=\"\n         data.control != undefined &&\n         (\n             data.groupType == undefined ||\n             parent.arrayType == 'enum'\n         ) &&\n         key != 'setValue' &&\n         (\n             data.hide == undefined ||\n             !data.hide\n         )\n    \"\n    [ngClass]=\"{\n        'error': !data.control.valid,\n        'hb-form-with-hints' : data.hints\n    }\"\n    class=\"expand-to-child hb-form-widget hb-form-widget_{{ key }} {{ data?.html?.classAttr }}\"\n>\n    <ng-container *ngIf=\"!data.useComponent; else customBlock\">\n        <label *ngIf=\"data.label\"\n               [attr.for]=\"'hb-form-widget_' + (key ? key : data.slug) +'-input'\"\n               [attr.class]=\"data?.html?.class?.label\">{{ data.label }}</label>\n\n        <ng-container *ngIf=\"parent?.arrayType !== 'enum'\">\n            <ng-container *ngIf=\"['select', 'radio', 'checkbox', 'textarea'].indexOf(data.renderType) === -1\">\n                <div *ngIf=\"data.selectOptionsObservables == undefined; else autocompleteBlock\"\n                     class=\"hb-form-widget-input-field\">\n                    <input [attr.id]=\"'hb-form-widget_' + (key ? key : data.slug) +'-input'\"\n                           [type]=\"data.renderType ? data.renderType : 'text'\"\n                           (change)=\"data.control.patchValue($event.target.value)\"\n                           [placeholder]=\"data.placeholder !== undefined ? data.placeholder : ''\"\n                           [formControl]=\"data.control\" />\n                </div>\n\n                <ng-template #autocompleteBlock [ngIf]=\"data.autocomplete != undefined\">\n<!--                        Autocomplete is not well supported in hb-form-widget-->\n\n<!--                        <div *ngIf=\"data.autocomplete.renderType != 'custom'; else autocompleteCustomizeBlock\" -->\n<!--                             class=\"hb-form-widget-input-field autocomplete\">-->\n<!--                            <input [attr.id]=\"key ? key : data.slug + '-input'\"-->\n<!--                                   [type]=\"data.renderType ? data.renderType : 'text'\"-->\n<!--                                   (change)=\"data.control.patchValue($event.target.value)\"-->\n<!--                                   [placeholder]=\"data.label !== undefined ? data.label : data.option.name\"-->\n<!--                                   [formControl]=\"data.control\" />-->\n\n<!--                            <autocomplete #auto=\"matAutocomplete\">-->\n<!--                                <option *ngFor=\"let option of data.selectOptionsObservables | async\" [value]=\"option.value\">-->\n<!--                                    <span>{{ option.label }}</span>-->\n<!--                                </option>-->\n<!--                            </autocomplete>-->\n\n<!--                            <span class=\"hints\" *ngIf=\"data?.hints\">-->\n<!--                                {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}-->\n<!--                            </span>-->\n<!--                        </div>-->\n                </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf=\"data.renderType == 'textarea'\">\n                <textarea [rows]=\"data?.html?.textarea?.row || 5\" [formControl]=\"data.control\"\n                          [attr.id]=\"'hb-form-widget_' + (key ? key : data.slug) +'-input'\">\n                </textarea>\n            </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"isOptionSelectingComponent()\">\n\n            <ng-container *ngIf=\"data.renderType != 'select'; else selectBlock\">\n                <ng-container *ngFor=\"let option of resolvedOptions | async\">\n                    <label *ngIf=\"parent?.arrayType == 'enum' || data.renderType != 'checkbox'\"\n                           for=\"hb-form-widget_{{ key ? key : data.slug }}-input__{{ slugifyString(option.name) }}\">{{ option.name }}</label>\n\n                    <ng-container *ngIf=\"data.renderType == 'radio'; else checkBoxBlock\">\n                        <input type=\"radio\"\n                               id=\"hb-form-widget_{{ key ? key : data.slug }}-input__{{ slugifyString(option.name) }}\"\n                               class=\"example-radio-button\"\n                               [value]=\"option.value\"\n                               [checked]=\"data.control.value === option.value || option.id === data.control.value ? true : null\"\n                               [attr.name]=\"data.renderType == 'radio' ? (key ? key : data.slug) + '-input' : null\"\n                               (select)=\"parent?.arrayType == 'enum' ? updateParentValue($event, option) : data.control.patchValue($event.target.value)\"\n                               [formControl]=\"data.control\"\n                        />\n                    </ng-container>\n\n                    <ng-template #checkBoxBlock>\n                        <ng-container *ngIf=\"parent?.arrayType == 'enum'; else booleanCheckBoxBlock\">\n                            <input type=\"checkbox\"\n                                   [value]=\"option.value\"\n                                   [checked]=\"data.control.value === option.value || option.id === data.control.value ? true : null\"\n                                   (change)=\"parent?.arrayType == 'enum' ? updateParentValue($event, option) : data.control.patchValue($event.target.value)\"\n                                   [formControl]=\"data.control\"/>\n                        </ng-container>\n\n                        <ng-template #booleanCheckBoxBlock>\n                            <input type=\"checkbox\"\n                                   [checked]=\"data.control.value ? true : null\"\n                                   (change)=\"data.control.patchValue($event.target.checked)\"/>\n                        </ng-template>\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n\n            <ng-template #selectBlock>\n                <select *ngIf=\"data.renderType == 'select'\"\n                        [formControl]=\"data.control\"\n                        [attr.placeholder]=\"data.label != undefined ? data.label : ''\"\n                >\n                    <option *ngFor=\"let option of resolvedOptions | async\" [value]=\"option.value\">\n                        {{ option.name ? option.name : option.value }}\n                    </option>\n                </select>\n            </ng-template>\n        </ng-container>\n\n        <span class=\"hints\" *ngIf=\"data?.hints\">\n            {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}\n        </span>\n    </ng-container>\n\n    <ng-template #customBlock></ng-template>\n</div>\n","import {\n    Component,\n    OnInit,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IMultipleChoicesOptionsFormConfig } from \"../class/decorators/MultipleChoicesOptions\";\nimport { IBaseFormConfig } from \"../class/decorators/FormConfig\";\nimport { IArrayOptionsFormConfig } from \"../class/decorators/ArrayOptions\";\nimport { IObjectOptionsFormConfig } from \"../class/decorators/ObjectOptions\";\nimport { IChoiceOptionsFormConfig } from \"../class/decorators/ChoiceOptions\";\n\n@Component({\n    selector: 'hb-form-widget',\n    templateUrl: './hb-form-widget.tpl.html',\n    inputs: ['data', 'key', 'parent']\n})\nexport class HbFormWidgetComponent implements OnInit {\n    public resolvedOptions;\n    public key;\n    public data: any & IBaseFormConfig & IMultipleChoicesOptionsFormConfig & IArrayOptionsFormConfig & IObjectOptionsFormConfig & IChoiceOptionsFormConfig;\n    public parent;\n    static slugMap = [];\n\n    @ViewChild(\"customBlock\", { read: ViewContainerRef, static: true }) customBlock;\n\n    constructor(\n        private resolver: ComponentFactoryResolver\n    ) {\n    }\n\n    log(...args) {\n        console.log(...args);\n    }\n\n    ngAfterViewInit() {\n        if (!this.data.hide && this.data.useComponent) {\n            const factory = this.resolver.resolveComponentFactory(\n                this.data.useComponent\n            );\n            const ref = this.customBlock.createComponent(factory);\n            ref.instance.templateObject = this.data;\n            ref.instance.parentTemplateObject = this.parent;\n\n            ref.changeDetectorRef.detectChanges();\n        }\n    }\n\n    isOptionSelectingComponent() {\n        return ['radio', 'checkbox', 'select'].indexOf(this.data.renderType) > -1;\n    }\n\n    ngOnInit() {\n        if (this.isOptionSelectingComponent()) {\n            let data = this.data;\n\n            let result = null;\n            let resolved = null;\n\n            let options: any = [];\n            if (\n                data.options && (\n                    data.options.length ||\n                    typeof data.options === 'function'\n                )\n            ) {\n                options = data.options\n            } else if (\n                data.type === 'boolean' &&\n                data.renderType === 'checkbox'\n            ) {\n                options = [{\n                    name: data.label,\n                    value: true,\n                }];\n            }\n\n            if (options.length === 0) {\n                throw new Error('No options set for ' + data.key + ' in ' + this.parent.key);\n            }\n\n            if (typeof options === 'function') {\n                resolved = options(data.diContainer, this.data, this.parent);\n            } else if (!(result instanceof Observable)) {\n                resolved = options;\n            }\n\n            result = resolved;\n\n            if (!(resolved instanceof Observable)) {\n                result = new Observable((o) => {\n                    o.next(resolved);\n                    o.complete();\n                });\n            }\n\n            this.resolvedOptions = result;\n        }\n    }\n\n    stringToBoolean(val) {\n        return val === 'true'\n    }\n\n    updateParentValue($event, option) {\n        const target = $event.target ? $event.target : $event.source;\n        let isChecked = target.checked;\n\n        switch (this.data.renderType) {\n            case 'checkbox':\n                let parentControls = this.parent.control.controls;\n\n                if (isChecked) {\n                    this.parent.add();\n\n                    parentControls[parentControls.length - 1].setValue(option.value);\n                } else {\n                    let i = 0;\n\n                    for (; i < parentControls.length; i++) {\n                        if (parentControls[i].value == option.value) break;\n                    }\n\n                    this.parent.remove(i);\n                }\n\n                break;\n\n            case 'radio':\n                if (isChecked) this.data.control.patchValue(target.value);\n\n                break;\n        }\n    }\n\n    typeof(input) {\n        return typeof input;\n    }\n\n    slugifyString(input: string) {\n        if (input in HbFormWidgetComponent.slugMap) {\n            return HbFormWidgetComponent.slugMap[input];\n        }\n\n        if (input) {\n            return HbFormWidgetComponent.slugMap[input] = input\n                .toLowerCase()\n                .replace(/[^\\w\\s-]/g, '')\n                .replace(/[\\s_-]+/g, '-')\n                .replace(/^-+|-+$/g, '');\n        } else {\n            throw new Error('Cannot slugify input, input is undefined.')\n        }\n    }\n}\n","<div [attr.id]=\"data.id\"\n     class=\"hb-form-array {{ data.arrayType }} hb-form-array_{{ key }} {{ data?.html?.classAttr }}\"\n     *ngIf=\"\n         data.control != undefined &&\n         key != 'setValue' && (\n             data.hide == undefined ||\n             !data.hide\n         )\n     \"\n     [formGroup]=\"data.control\"\n     [ngClass]=\"{\n         'hb-form-with-hints' : data.hints\n     }\"\n>\n    <header>\n        <h2 *ngIf=\"!data.hideHeader\">{{ data.label }}</h2>\n\n        <ng-container *ngIf=\"data.childrenConfigName.length > 0\">\n            <ng-container *ngIf=\"!data.expandOptions; else expandedArrayPushOptions\">\n                <select class=\"hb-form-array-config-switch\"\n                        [(ngModel)]=\"data.useConfig\" [ngModelOptions]=\"{standalone: true}\">\n                    <option *ngFor=\"let configName of data.childrenConfigName; let i = index\" [value]=\"i\">\n                        {{ configName }}\n                    </option>\n                </select>\n\n                <button class=\"btn btn-default hb-form-add-btn\" type=\"button\" *ngIf=\"data.arrayType != 'enum'\" (click)=\"data.add()\">Add</button>\n            </ng-container>\n\n            <ng-template #expandedArrayPushOptions>\n                <button type=\"button\"\n                        class=\"btn btn-default hb-form-add-btn hb-form-add-btn-expanded-{{ i }}\"\n                        *ngFor=\"let configName of data.childrenConfigName; let i = index\"\n                        (click)=\"data.useConfig = i; data.add();\">\n                    &#x253C; {{ configName }}\n                </button>\n            </ng-template>\n        </ng-container>\n    </header>\n\n    <div [attr.id]=\"data.id ? (data.id + '_' + i) : null\"\n         class=\"hb-form-array-cell hb-form-array-cell_{{ cell?.flexibleObjectTypeName?.toLowerCase() }} {{ cell?.html?.classAttr }}\"\n         *ngFor=\"let cell of (data.arrayType != 'enum' ? data.children : resolvedOptions | async); let i=index\">\n        <hb-form-widget *ngIf=\"data.arrayType == 'enum'\"\n                        [data]=\"cell\"\n                        [key]=\"i\"\n                        [parent]=\"data\"></hb-form-widget>\n\n        <ng-container *ngIf=\"data.arrayType != 'enum'\">\n            <div *ngFor=\"let each of cell.children | mapToIterable;\"\n                 class=\"panel panel-default hb-form-array-cell-attr_{{ each.key }}\">\n                <ng-container *ngIf=\"!each.hide && each.key != 'setValue'\">\n                    <hb-form-widget *ngIf=\"each.val.groupType == undefined\"\n                                    [data]=\"each.val\"\n                                    [key]=\"i\"\n                                    [parent]=\"data\"></hb-form-widget>\n                    <hb-form-array *ngIf=\"each.val?.groupType == 'array'\"\n                                   [data]=\"each.val\"\n                                   [key]=\"each.key\"\n                                   [parent]=\"data\"></hb-form-array>\n                    <hb-form-object *ngIf=\"each.val?.groupType == 'object'\"\n                                    [data]=\"each.val\"\n                                    [key]=\"each.key\"\n                                    [parent]=\"data\"></hb-form-object>\n                </ng-container>\n            </div>\n        </ng-container>\n\n        <button class=\"btn btn-default hb-form-remove-btn\"\n                type=\"button\"\n                *ngIf=\"data.arrayType != 'enum'\"\n                (click)=\"data.remove(i)\">\n            &#x2715;\n        </button>\n    </div>\n\n    <div class=\"hints\" *ngIf=\"data?.hints\">\n        {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer) : data.hints }}\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { HbFormWidgetComponent } from './hb-form-widget.component';\n\n@Component({\n    selector: 'hb-form-array',\n    templateUrl: './hb-form-array.tpl.html',\n    inputs: ['key', 'data', 'parent']\n})\nexport class HbFormArrayComponent extends HbFormWidgetComponent {\n}\n","<mat-card class=\"hb-form-array hb-array-type_{{ data.arrayType }} hb-form-array_{{ key }} {{ data?.html?.classAttr }}\"\n          [attr.id]=\"data.id\"\n          *ngIf=\"\n              data.control != undefined &&\n              key != 'setValue' && (\n                  data.hide == undefined ||\n                  !data.hide\n              )\n          \"\n          [formGroup]=\"data.control\"\n          [ngClass]=\"{\n              'hb-form-with-hints' : data.hints\n          }\">\n    <mat-card-header>\n        <mat-card-title *ngIf=\"!data.hideHeader\">\n            <h2 *ngIf=\"data.label != ''\">{{ data.label }}</h2>\n\n            <ng-container *ngIf=\"data.childrenConfigName.length > 0\">\n                <ng-container *ngIf=\"!data.expandOptions; else expandedArrayPushOptions\">\n                    <mat-form-field>\n                        <mat-select class=\"hb-form-array-config-switch\"\n                                    [(ngModel)]=\"data.useConfig\"\n                                    [ngModelOptions]=\"{standalone: true}\">\n                            <mat-option *ngFor=\"let configName of data.childrenConfigName; let i = index\" [value]=\"i\">\n                                {{ configName }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <button mat-raised-button\n                            type=\"button\"\n                            class=\"btn btn-default hb-form-add-btn\"\n                            *ngIf=\"data.arrayType != 'enum'\"\n                            (click)=\"data.add()\"\n                    >\n                        Add\n                    </button>\n                </ng-container>\n\n                <ng-template #expandedArrayPushOptions>\n                    <button mat-raised-button\n                            type=\"button\"\n                            *ngFor=\"let configName of data.childrenConfigName; let i = index\"\n                            (click)=\"data.useConfig = i; data.add();\">\n                        &#x253C; {{ configName }}\n                    </button>\n                </ng-template>\n            </ng-container>\n        </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <div [attr.id]=\"data.id + '-' + i\"\n             class=\"hb-form-array-cell hb-form-array-cell_{{ cell?.flexibleObjectTypeName?.toLowerCase() }} {{ cell?.html?.classAttr }}\"\n             *ngFor=\"\n                 let cell of data.arrayType != 'enum' ?\n                     data.children : resolvedOptions | async\n                 ; let i=index\n             \">\n            <hb-mat-form-widget *ngIf=\"data.arrayType == 'enum'\" [data]=\"cell\" [key]=\"i\" [parent]=\"data\"></hb-mat-form-widget>\n\n            <ng-container *ngIf=\"data.arrayType != 'enum'\">\n                <div *ngFor=\"let each of cell.children | mapToIterable;\"\n                     class=\"hb-form-array-cell-attr_{{ each.key }}\">\n                    <ng-container *ngIf=\"!each.hide && each.key != 'setValue'\">\n                        <hb-mat-form-widget *ngIf=\"each.val.groupType == undefined\" [data]=\"each.val\" [key]=\"i\" [parent]=\"data\">\n                        </hb-mat-form-widget>\n                        <hb-mat-form-array *ngIf=\"each.val?.groupType == 'array'\" [data]=\"each.val\" [key]=\"each.key\" [parent]=\"data\">\n                        </hb-mat-form-array>\n                        <hb-mat-form-object *ngIf=\"each.val?.groupType == 'object'\" [data]=\"each.val\" [key]=\"each.key\" [parent]=\"data\">\n                        </hb-mat-form-object>\n                    </ng-container>\n                </div>\n            </ng-container>\n\n            <button mat-mini-fab color=\"primary\" class=\"hb-form-remove-btn\" type=\"button\"\n                    *ngIf=\"data.arrayType != 'enum'\"\n                    (click)=\"data.remove(i)\">\n                &#x2715;\n            </button>\n        </div>\n\n        <strong class=\"mat-hint\" *ngIf=\"data?.hints\">\n            {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer) : data.hints }}\n        </strong>\n    </mat-card-content>\n</mat-card>\n","import { Component } from \"@angular/core\";\nimport { HbFormArrayComponent } from \"./hb-form-array.component\";\n\n@Component({\n    selector: 'hb-mat-form-array',\n    templateUrl: './hb-form-mat-array.tpl.html',\n    inputs: ['key', 'data', 'parent']\n})\nexport class HbFormMatArrayComponent extends HbFormArrayComponent {\n}\n","<div *ngIf=\"\n        data.control != undefined &&\n        key != 'setValue' && (\n            data.hide == undefined ||\n            !data.hide\n        )\n    \"\n     [formGroup]=\"data.control\"\n     [ngClass]=\"{\n         'error': !data.control.valid,\n         'hb-form-with-hints' : data.hints\n     }\"\n     class=\"form-object {{ data?.html?.classAttr }} hb-form-obj_{{ key }}\"\n>\n    <h2 *ngIf=\"typeof(data.label) == 'string' && data.label != '' && !data.hideHeader\">\n        {{ data.label }}\n    </h2>\n\n    <div class=\"hb-form-object-content\">\n        <div *ngFor=\"let each of data.children | mapToIterable\" class=\"hb-form-obj-attr_{{ each.key }}\">\n            <ng-container *ngIf=\"!each.hide && each.key != 'setValue'\">\n                <hb-form-widget\n                    *ngIf=\"each.val.groupType == undefined && each.key != 'setValue'\"\n                    [data]=\"each.val\"\n                    [key]=\"each.key\"\n                    [parent]=\"data\"\n                ></hb-form-widget>\n                <hb-form-array\n                    *ngIf=\"each.val?.groupType == 'array'\"\n                    [data]=\"each.val\"\n                    [key]=\"each.key\"\n                    [formArrayName]=\"each.key\"\n                    [parent]=\"data\"\n                ></hb-form-array>\n                <hb-form-object\n                    *ngIf=\"each.val?.groupType == 'object' && each.key != 'setValue'\"\n                    [data]=\"each.val\"\n                    [key]=\"each.key\"\n                    [parent]=\"data\"\n                ></hb-form-object>\n            </ng-container>\n        </div>\n\n        <span class=\"hints\" *ngIf=\"data?.hints\">\n            {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer) : data.hints }}\n        </span>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { HbFormWidgetComponent } from './hb-form-widget.component';\n\n@Component({\n    selector: 'hb-form-object',\n    templateUrl:  './hb-form-object.tpl.html',\n    inputs: ['id', 'key', 'data', 'parent']\n})\nexport class HbFormObjectComponent extends HbFormWidgetComponent {\n}\n","<mat-card *ngIf=\"\n    data.control != undefined &&\n    key != 'setValue' && (\n        data.hide == undefined ||\n        !data.hide\n    )\"\n          [formGroup]=\"data.control\"\n          [ngClass]=\"{\n        'error': !data.control.valid,\n        'hb-form-with-hints' : data.hints\n    }\"\n          class=\"form-object {{ data?.html?.classAttr }} hb-form-obj_{{ key }}\">\n    <mat-card-header *ngIf=\"typeof(data.label) == 'string' && data.label != '' && !data.hideHeader\">\n        <mat-card-title>\n            {{ data.label }}\n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"hb-form-object-content\">\n        <div *ngFor=\"let each of data.children | mapToIterable\" class=\"hb-form-obj-attr_{{ each.key }}\">\n            <ng-container *ngIf=\"!each.hide && each.key != 'setValue'\">\n                <hb-mat-form-widget\n                        *ngIf=\"each.val.groupType == undefined && each.key != 'setValue'\"\n                        [data]=\"each.val\"\n                        [key]=\"each.key\"\n                        [parent]=\"data\">\n                </hb-mat-form-widget>\n                <hb-mat-form-array\n                        *ngIf=\"each.val?.groupType == 'array'\"\n                        [data]=\"each.val\"\n                        [key]=\"each.key\"\n                        [formArrayName]=\"each.key\"\n                        [parent]=\"data\">\n                </hb-mat-form-array>\n                <hb-mat-form-object\n                        *ngIf=\"each.val?.groupType == 'object' && each.key != 'setValue'\"\n                        [data]=\"each.val\"\n                        [key]=\"each.key\"\n                        [parent]=\"data\">\n                </hb-mat-form-object>\n            </ng-container>\n        </div>\n        <strong class=\"mat-hint\" *ngIf=\"data?.hints\">\n            {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer) : data.hints }}\n        </strong>\n    </mat-card-content>\n</mat-card>\n","import { Component } from \"@angular/core\";\nimport { HbFormObjectComponent } from \"./hb-form-object.component\";\n\n@Component({\n    selector: 'hb-mat-form-object',\n    templateUrl:  './hb-form-mat-object.tpl.html',\n    inputs: ['id', 'key', 'data', 'parent']\n})\nexport class HbFormMatObjectComponent extends HbFormObjectComponent {\n}\n","<div *ngIf=\"\n         data.control != undefined &&\n         (\n             data.groupType == undefined ||\n             parent.arrayType == 'enum'\n         ) &&\n         key != 'setValue' &&\n         (\n             data.hide == undefined ||\n             !data.hide\n         )\n     \"\n     [ngClass]=\"{\n         'error': !data.control.valid,\n         'hb-form-with-hints' : data.hints\n     }\"\n     class=\"expand-to-child hb-form-widget hb-form-widget_{{ key }} {{ data?.html?.classAttr }}\"\n>\n    <ng-template #customBlock></ng-template>\n\n    <ng-container *ngIf=\"\n        !data.useComponent &&\n        parent?.arrayType !== 'enum'\n    \">\n        <ng-container *ngIf=\"['select', 'radio', 'checkbox', 'textarea'].indexOf(data.renderType) === -1\">\n            <mat-form-field *ngIf=\"data.selectOptionsObservables == undefined; else autocompleteBlock\" class=\"hb-form-widget-input-field\">\n                <div class=\"form-field-prefix\"\n                     matPrefix\n                     *ngIf=\"data?.matExtra?.matPrefix\"\n                     [innerHtml]=\"data.matExtra.matPrefix\"\n                ></div>\n\n                <input matInput\n                       [attr.id]=\"(key ? key : data.slug) + '-input'\"\n                       [type]=\"data.renderType ? data.renderType : 'text'\"\n                       (change)=\"data.control.patchValue($event.target.value)\"\n                       [placeholder]=\"data.label !== undefined ? data.label : null\"\n                       [formControl]=\"data.control\" />\n\n                <mat-hint align=\"start\" *ngIf=\"data?.hints\">\n                    <strong>\n                        {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                    </strong>\n                </mat-hint>\n\n                <div class=\"form-field-suffix\"\n                     matSuffix\n                     *ngIf=\"data?.matExtra?.matSuffix\"\n                     [innerHtml]=\"data.matExtra.matSuffix\"></div>\n            </mat-form-field>\n\n            <ng-template #autocompleteBlock [ngIf]=\"data.autocomplete != undefined\">\n                <mat-form-field *ngIf=\"data.autocomplete.renderType != 'custom';\">\n<!--                  else autocompleteCustomizeBlock-->\n                    <input matInput\n                           [attr.id]=\"key ? key : data.slug + '-input'\"\n                           [type]=\"data.renderType ? data.renderType : 'text'\"\n                           (change)=\"data.control.patchValue($event.target.value);\"\n                           placeholder=\"{{ data.label !== undefined ? data.label : data.option.name }}\"\n                           [formControl]=\"data.control\"\n                           [matAutocomplete]=\"auto\" />\n\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of data.selectOptionsObservables | async\" [value]=\"option.value\">\n                            <span>{{ option.label }}</span>\n                        </mat-option>\n                    </mat-autocomplete>\n\n                    <mat-hint align=\"start\" *ngIf=\"data?.hints\">\n                        <strong>\n                            {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                        </strong>\n                    </mat-hint>\n                </mat-form-field>\n            </ng-template>\n        </ng-container>\n\n        <mat-form-field *ngIf=\"data.renderType === 'textarea'\">\n            <textarea matInput rows=\"5\" [formControl]=\"data.control\"\n                      [placeholder]=\"data.label ? data.label : data.option.name\"\n                      [attr.id]=\"key ? key : data.slug + '-input'\">\n            </textarea>\n\n            <mat-hint align=\"start\" *ngIf=\"data?.hints\">\n                <strong>\n                    {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                </strong>\n            </mat-hint>\n        </mat-form-field>\n    </ng-container>\n\n    <ng-container *ngIf=\"!data.useComponent && ['radio', 'checkbox', 'select'].indexOf(data.renderType) > -1\">\n        <div *ngIf=\"data.renderType != 'select'; else selectBlock\">\n            <mat-radio-group *ngIf=\"data.renderType == 'radio'; else checkBoxBlock\" [formControl]=\"data.control\">\n                <mat-radio-button\n                    class=\"example-radio-button\"\n                    *ngFor=\"let option of data.options\"\n                    [value]=\"option.value\"\n                    [checked]=\"data.control.value === option.value || option.id === data.control.value ? true : null\"\n                    [attr.name]=\"data.renderType == 'radio' ? (key ? key : data.slug) + '-input' : null\"\n                    (change)=\"updateParentValue($event, option)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n\n            <ng-template #checkBoxBlock>\n                <ng-container *ngIf=\"parent?.arrayType == 'enum'; else booleanCheckboxBlock\">\n                    <mat-checkbox\n                        *ngFor=\"let option of data.options\"\n                        [value]=\"option.value\"\n                        [checked]=\"data.control.value === option.value || option.id === data.control.value ? true : null\"\n                        (change)=\"updateParentValue($event, option)\"\n                        [formControl]=\"data.control\"\n                    >\n                        {{ option.name }}\n                    </mat-checkbox>\n                </ng-container>\n\n                <ng-template #booleanCheckboxBlock>\n                    <label>{{ data.label }}</label>\n                    <mat-checkbox [checked]=\"data.control.value ? true : null\"\n                                  (change)=\"data.control.patchValue($event.source.checked)\">\n                    </mat-checkbox>\n                </ng-template>\n            </ng-template>\n        </div>\n\n        <ng-template #selectBlock>\n            <mat-form-field>\n                <mat-select\n                    *ngIf=\"data.renderType == 'select'\"\n                    [formControl]=\"data.control\"\n                    [placeholder]=\"data.label != undefined ? data.label : null\"\n                >\n                    <mat-option *ngFor=\"let option of resolvedOptions | async\" [value]=\"option.value\">\n                        {{ option.name ? option.name : option.value }}\n                    </mat-option>\n                </mat-select>\n\n                <mat-hint align=\"start\" *ngIf=\"data?.hints\">\n                    <strong>\n                        {{ typeof(data.hints) == 'function' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                    </strong>\n                </mat-hint>\n            </mat-form-field>\n        </ng-template>\n    </ng-container>\n</div>\n","import { HbFormWidgetComponent } from \"./hb-form-widget.component\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n    selector: 'hb-mat-form-widget',\n    templateUrl: './hb-form-mat-widget.tpl.html',\n    inputs: ['data', 'key', 'parent']\n})\nexport class HbFormMatWidgetComponent extends HbFormWidgetComponent implements OnInit {\n    ngOnInit() {\n        super.ngOnInit();\n\n        if (\n            this.parent.arrayType == 'enum' &&\n            this.parent.control.value.indexOf(this.data.options[0].value) > -1\n        ) {\n            this.data.control.setValue(\n                this.data.options[0].value\n            )\n        }\n    }\n}\n","export type AttributeType = 'string' | 'number' | 'boolean' | 'date' | 'array' | 'object' | 'any';\n\nexport class TypeMeta {\n    constructor(protected _type: AttributeType) {}\n\n    get type(): AttributeType {\n        return this._type;\n    }\n}\n\nexport class PrimitiveTypeMeta extends TypeMeta {\n    constructor(\n        protected _value: any\n    ) {\n        super(\n            <AttributeType>([\n                'string',\n                'number',\n                'boolean'\n            ].indexOf(typeof _value) > -1 ? typeof _value : 'any')\n        );\n    }\n\n    get value(): any {\n        return this._value;\n    }\n}\n\nexport class NonPrimitiveTypeMeta extends TypeMeta {\n    constructor(\n        type: 'object' | 'array' | 'date',\n        private _mapping: any = null, // All attributes should be type of ExtractorResultType\n        private _value: any = null\n    ) {\n        super(type);\n    }\n\n    get mapping(): ExtractorResultType {\n        return this._mapping;\n    }\n\n    get value(): any {\n        return this._value;\n    }\n}\n\nexport type ExtractorResultType = NonPrimitiveTypeMeta | PrimitiveTypeMeta;\n\nconst OnOATResolvedSymbol = 'OnOATResolved';\n\nexport function OnOATResolved(cb: (target: any, key: string, resolved: any) => void) {\n    return Reflect.metadata(OnOATResolvedSymbol, cb);\n}\n\nexport class ObjectAttributeTypeExtractor {\n    static generateMapping(\n        input: any,\n        options: {\n            keyNamingStrategy?: 'camelCase' | 'snake_case',\n            stripUnderscore?: boolean,\n            onResolved?: (target: any, key?: string, resolved?: any) => void\n        } = {}\n    ): any {\n        options = Object.assign({\n            keyNamingStrategy: 'camelCase',\n            stripUnderscore: false\n        }, options);\n\n        let mapping: any = {};\n        let result: any = null;\n\n        // input is an array, analyze the first cell only\n        if (input instanceof Array) {\n            mapping = new NonPrimitiveTypeMeta(\n                'array',\n                Extractor.generateMapping(input[0], options)\n            );\n        } else {\n            // Analyze attributes inside input object\n            for (let key in input) {\n                if (typeof input[key] !== 'function') {\n                    let resolvedMeta: any = {};\n\n                    // Array or Object\n                    if (typeof input[key] === 'object') {\n                        resolvedMeta = Extractor.generateObjectTypeMapping(input, key, options);\n\n                    // Any primitive type\n                    } else if (typeof input[key] !== 'function') {\n                        resolvedMeta = new PrimitiveTypeMeta(input[key]);\n                    }\n\n                    if (Reflect.hasMetadata(OnOATResolvedSymbol, input, key)) {\n                        Reflect.getMetadata(\n                            OnOATResolvedSymbol, input, key\n                        )(\n                            input, key, resolvedMeta\n                        );\n                    } else if (typeof options.onResolved === 'function') {\n                        options.onResolved(input, key, resolvedMeta);\n                    }\n\n                    // Finished, set resolved attribute metadata to result\n                    mapping[\n                        Extractor.resolveAttributeKey(options, key, input)\n                    ] = resolvedMeta;\n                }\n            }\n        }\n\n        if (\n            typeof input === 'object'\n        ) {\n            if (!(input instanceof Date) && !(input instanceof Array)) {\n                result = new NonPrimitiveTypeMeta('object', mapping);\n            } else {\n                result = mapping;\n            }\n        } else {\n            result = { mapping };\n        }\n\n        if (Reflect.hasMetadata(OnOATResolvedSymbol, input.constructor)) {\n            Reflect.getMetadata(\n                OnOATResolvedSymbol, input.constructor\n            )(\n                input.constructor, null, result\n            );\n        } else if (typeof options.onResolved === 'function') {\n            options.onResolved(input, null, result);\n        }\n\n        return result\n    }\n\n    static generateObjectTypeMapping(object: any, key, options: any) {\n        let resolvedMeta = null;\n\n        // Mark type as any if value is null\n        if (object[key] === null) {\n            resolvedMeta = new PrimitiveTypeMeta(null);\n\n        // For Array\n        } else if (object[key] instanceof Array) {\n            let target = object[key];\n            // For Primitive Array\n            if (typeof target[0] !== 'object') {\n                resolvedMeta = new NonPrimitiveTypeMeta('array', new PrimitiveTypeMeta(target[0]));\n            // For Object Array\n            } else {\n                resolvedMeta = Extractor.generateMapping(target, options);\n            }\n\n        // For Date\n        } else if (object[key] instanceof Date) {\n            resolvedMeta = new NonPrimitiveTypeMeta('date', null, object[key]);\n\n        // For Object\n        } else {\n            resolvedMeta = Extractor.generateMapping(object[key], options);\n        }\n\n        return resolvedMeta;\n    }\n\n    static resolveAttributeKey(options: any, key, object: any) {\n        let setterKey = key;\n\n        // if set function exists, rename _attr to attr\n        if (options.stripUnderscore && key.charAt(0) === '_') {\n            let trimmedKey = key.substr(1, key.length);\n\n            if (trimmedKey in object) {\n                setterKey = trimmedKey;\n            }\n        }\n\n        // Some serializer serialize data with snake_case\n        // but JS Entity Classes name attributes with camelCase\n        if (options.keyNamingStrategy === 'snake_case') {\n            setterKey = Extractor.convertStringToSnakeCase(setterKey);\n        }\n\n        return setterKey;\n    }\n\n    // For naming convention changing. Not really related to this extractor\n    static fixNamingConvention(data: any, options: any) {\n        let result = null;\n        options = Object.assign({\n            keyNamingStrategy: 'camelCase',\n            stripUnderscore: false\n        }, options);\n\n        if (data instanceof Array) {\n            result = [];\n\n            data.forEach(function (obj) {\n                result.push(Extractor.fixNamingConvention(obj, options));\n            });\n        } else if (typeof data === 'object') {\n            result = {};\n\n            for (let key in data) {\n                if (!options.stripUnderscore || key.charAt(0) !== '_') {\n                    let finalKey = key;\n\n                    if (options.keyNamingStrategy === 'snake_case') {\n                        finalKey = Extractor.convertStringToSnakeCase(key);\n                    }\n\n                    if (typeof data[key] === 'object') {\n                        result[finalKey] = Extractor.fixNamingConvention(data[key], options);\n                    } else {\n                        result[finalKey] = data[key];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    // For JSON editor only. Should be extracted.\n    static convertDataToString(data: any, callbacks: any = {}) {\n        let result = null;\n\n        if (data instanceof Array) {\n            result = [];\n\n            data.forEach(function (obj) {\n                result.push(Extractor.convertDataToString(obj));\n            });\n        } else if (typeof data === 'object') {\n            result = {};\n\n            for (let key in data) {\n                if (typeof data[key] === 'object') {\n                    if (data[key] instanceof Date) {\n                        result[key] =\n                            'date' in callbacks &&\n                            callbacks.date instanceof Function ?\n                                callbacks.date(data[key]) : data[key].yyyymmdd('-');\n                    } else {\n                        result[key] = Extractor.convertDataToString(data[key]);\n                    }\n                } else if (typeof data[key] !== 'function') {\n                    result[key] = data[key];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    static convertStringToSnakeCase(value) {\n        const result = value.replace(/([A-Z]+)/g, \"_$1\").toLowerCase();\n\n      return result;\n    }\n}\n\nlet Extractor = ObjectAttributeTypeExtractor;\n","import { ICustomComponentConstructor } from \"../../HbFormModule\";\nimport { ValidatorFn } from \"@angular/forms\";\n\nexport type RenderType = 'text' | 'email' | 'number' | 'hidden' | 'radio' | 'checkbox' | 'textarea' | 'select';\nexport type HtmlElementAttribute = 'label' | 'input' | 'inputContainer' | 'widgetContainer';\n\ntype ObjectHtmlElementAttribute = 'objectHeaderContainer' | 'objectHeader' | HtmlElementAttribute;\ntype ArrayHtmlElementAttribute = 'arrayHeaderContainer' | 'arrayHeader' | HtmlElementAttribute;\n\nexport interface IBaseFormConfig {\n    label?: string;\n    defaultValue?: any;\n    hints?: string | { (diContainer: Map<string, any>, currentTemplateObject, parentTemplateObject): string };\n    validators?: Array<ValidatorFn> | { (diContainer: Map<string, any>, currentTemplateObject, parentTemplateObject): Array<ValidatorFn> };\n    useValidators?: Array<string>;\n    renderType?: RenderType;\n    hide?: boolean;\n    hideHeader?: boolean;\n    useComponent?: ICustomComponentConstructor;\n    html?: {\n        id?: {\n            [key in HtmlElementAttribute]: string\n        },\n        class?: {\n            [key in HtmlElementAttribute]: string\n        },\n        textarea?: {\n            row?: number\n        }\n    };\n    beforeSetValue?: {\n        (currentTemplateObject, rawValue): void\n    };\n    afterSetValue?: {\n        (currentTemplateObject, rawValue): void\n    };\n}\n\nexport const FormConfigSymbol = Symbol('FormConfig');\n\nexport function FormConfig(options: IBaseFormConfig) {\n    let slug = null;\n\n    if (options.label) {\n        slug = options.label.toLowerCase()\n            .replace(/[^\\w\\s-]/g, '')\n            .replace(/[\\s_-]+/g, '-')\n            .replace(/^-+|-+$/g, '');\n    }\n\n    return Reflect.metadata(FormConfigSymbol,\n        Object.assign({\n            hiderHeader: false,\n            slug,\n        }, options)\n    );\n}\n","import { IBaseFormConfig } from './FormConfig';\n\nexport interface IArrayOptionsFormConfig extends IBaseFormConfig {\n    onPush?: (childrenTemplate: any, diContainer: Map<string, any>) => void\n    arrayType?: 'object' | 'primitive' | 'enum'\n}\n\nexport const ArrayOptionsSymbol = Symbol('IArrayOptionsFormConfig');\n\nexport function ArrayOptions(options: IArrayOptionsFormConfig) {\n    return Reflect.metadata(\n        ArrayOptionsSymbol,\n        Object.assign(\n            <IArrayOptionsFormConfig>{\n            }, options\n        )\n    );\n}\n","import { IBaseFormConfig } from './FormConfig';\n\nexport interface IObjectOptionsFormConfig extends IBaseFormConfig {\n    onCreate: (childrenTemplate: any, diContainer: Map<string, any>) => void\n}\n\nexport const ObjectOptionsSymbol = Symbol('IObjectOptionsFormConfig');\n\nexport function ObjectOptions(options: IObjectOptionsFormConfig) {\n    return Reflect.metadata(\n        ObjectOptionsSymbol,\n        Object.assign(\n            <IObjectOptionsFormConfig>{\n            }, options\n        )\n    );\n}\n","import { Observable } from \"rxjs\";\n\nexport interface IAutocompleteOptions {\n    onInit?: (childrenTemplate: any, diContainer: Map<string, any>) => void;\n\n    // No being used yet\n    options?: Observable<\n        Array<{\n            label:string,\n            value: any\n        }>\n    >\n}\n\nexport const AutocompleteSymbol = Symbol('IAutocompleteOptions');\n\nexport function AutocompleteOptions(options: IAutocompleteOptions) {\n    return Reflect.metadata(\n        AutocompleteSymbol, {\n            autocomplete: Object.assign(\n                <IAutocompleteOptions>{\n                }, options\n            )\n        }\n    );\n}\n","import { IBaseFormConfig } from './FormConfig';\nimport { Observable } from \"rxjs\";\n\nexport interface IChoice {\n    name: string;\n    value: any;\n}\n\n/**\n *  For Form field accepts one value only out of multiple available options\n */\nexport interface IChoiceOptionsFormConfig extends IBaseFormConfig {\n    // checkbox is for boolean only\n    renderType?: 'radio' | 'select' | 'checkbox';\n    options: {\n        (\n            diContainer: Map<string, any>,\n            currentTemplateObject,\n            parentTemplateObject\n        ): Array<IChoice> | Observable<Array<IChoice>>\n    } | Array<IChoice> | Observable<Array<IChoice>>;\n}\n\nexport const ChoiceOptionsSymbol = Symbol('IChoiceOptionsFormConfig');\n\nexport function ChoiceOptions(options: IChoiceOptionsFormConfig) {\n    return Reflect.metadata(\n        ChoiceOptionsSymbol,\n        Object.assign({\n                maxChoices: 1\n            },\n            <IChoiceOptionsFormConfig>{\n                renderType: 'select'\n            }, options\n        )\n    );\n}\n","import { IBaseFormConfig } from './FormConfig';\nimport { Observable } from \"rxjs\";\nimport { FormControl } from \"@angular/forms\";\nimport { IChoice } from \"./ChoiceOptions\";\n\nexport class OptionWrapper {\n    label = '';\n    control = new FormControl();\n    renderType = 'checkbox';\n    options = [];\n\n    constructor(option: IChoice) {\n        this.options.push(option);\n    }\n}\n\nexport interface IMultipleChoicesOptionsFormConfig extends IBaseFormConfig {\n    maxChoices?: number;\n    options: {\n        (\n            diContainer: Map<string, any>,\n            currentTemplateObject,\n            parentTemplateObject\n        ): Array<OptionWrapper> | Observable<Array<OptionWrapper>>\n    } | Array<OptionWrapper> | Observable<Array<OptionWrapper>>;\n}\n\nexport const MultipleChoicesOptionsSymbol = Symbol('IMultipleChoicesOptionsFormConfig');\n\nexport function MultipleChoicesOptions(options: IMultipleChoicesOptionsFormConfig) {\n    return Reflect.metadata(\n        MultipleChoicesOptionsSymbol,\n        Object.assign({\n                arrayType: 'enum'\n            },\n            <IMultipleChoicesOptionsFormConfig>{\n                maxChoices: null,\n            }, options\n        )\n    );\n}\n","import { IBaseFormConfig } from \"./FormConfig\";\n\nexport interface IFlexibleObjectArrayFormConfig extends IBaseFormConfig {\n    objectDefinitions: Array<{\n        label: string,\n        structure: any // The class with decorator or data object\n    }>,\n    expandOptions?: boolean\n    // You need to specific which object definition you want to use for each value\n    resolveFlexibleObjectArrayConfig: (template: any, rawValue) => void\n}\n\nexport const FlexibleObjectArraySymbol = Symbol('IFlexibleObjectArrayFormConfig');\n\nexport function FlexibleObjectArray(options: IFlexibleObjectArrayFormConfig) {\n    return Reflect.metadata(\n        FlexibleObjectArraySymbol,\n        Object.assign(\n            {\n                expandOptions: false,\n            }, options, {\n                arrayType: 'object',\n            }\n        )\n    );\n}\n","import { IBaseFormConfig } from './FormConfig';\n\nexport interface IMatExtraOptionsFormConfig extends IBaseFormConfig {\n    matExtra: {\n        matPrefix?: string,\n        matSuffix?: string,\n    }\n}\n\nexport const MatExtraOptionsSymbol = Symbol('IMatExtraOptionsFormConfig');\n\nexport function MatExtraOptions(options: IMatExtraOptionsFormConfig) {\n    return Reflect.metadata(\n        MatExtraOptionsSymbol,\n        Object.assign(\n            <IMatExtraOptionsFormConfig>{\n            }, options\n        )\n    );\n}\n","import { OnOATResolved } from \"../ObjectAttributeTypeExtractor\";\n\nimport { FormConfigSymbol } from './decorators/FormConfig';\nimport { ArrayOptionsSymbol } from './decorators/ArrayOptions';\nimport { ObjectOptionsSymbol } from './decorators/ObjectOptions';\nimport { AutocompleteSymbol } from './decorators/AutocompleteOptions';\nimport { ChoiceOptionsSymbol } from './decorators/ChoiceOptions';\nimport { MultipleChoicesOptionsSymbol } from './decorators/MultipleChoicesOptions';\nimport { FlexibleObjectArraySymbol } from \"./decorators/FlexibleObjectArray\";\nimport { MatExtraOptionsSymbol } from \"./decorators/MatExtraOptions\";\n\nexport function onOATResolved(target, key, resolved) {\n    if (!resolved.formFactory) {\n        resolved.formFactory = {};\n        [\n            FormConfigSymbol,\n            ArrayOptionsSymbol,\n            ObjectOptionsSymbol,\n            ChoiceOptionsSymbol,\n            MultipleChoicesOptionsSymbol,\n            FlexibleObjectArraySymbol,\n            AutocompleteSymbol,\n            MatExtraOptionsSymbol\n        ].forEach((eachSymbol) => {\n            let getMetadataArgs = [eachSymbol, target];\n\n            if (key) {\n                getMetadataArgs.push(key);\n            }\n\n            if (\n                Reflect.hasMetadata.apply(Reflect, getMetadataArgs)\n            ) {\n                resolved.formFactory = Object.assign({},\n                    resolved.formFactory,\n                    Reflect.getMetadata.apply(Reflect, getMetadataArgs)\n                );\n            }\n        });\n    }\n}\n\nexport function SetupConfig() {\n    return OnOATResolved(onOATResolved);\n}\n","import {\n    FormBuilder,\n    FormGroup,\n    FormControl,\n    FormArray,\n    Validators,\n} from '@angular/forms';\nimport {\n    NonPrimitiveTypeMeta,\n    ObjectAttributeTypeExtractor as Extractor\n} from \"../ObjectAttributeTypeExtractor\";\n\nexport * from './NgFormFactoryDecorators';\n\nexport class Ng2FormFactory {\n    static generateFormGroupByObject(\n        formBuilder: FormBuilder,\n        object: any,\n        resolveTypeAny: () => {\n            ngFormControl: any,\n            templateConfig: any\n        } = null,\n        options: any = {}\n    ) {\n        return Ng2FormFactory.generateFormGroupByOATMapping(\n            formBuilder, Extractor.generateMapping(object, options), resolveTypeAny\n        );\n    }\n\n    static diContainer = new Map();\n\n    static generateLabel(key) {\n        const fixedKey = key.replace(/([A-Z]+)/g, \" $1\").replace(/_/g, ' ');\n\n        return fixedKey.charAt(0).toUpperCase() + fixedKey.slice(1);\n    }\n\n    static generateFormGroupByOATMapping(\n        formBuilder: FormBuilder,\n        attributeMappingObject: any, // Yet all attributes inside should be typeof ExtractorResultType\n        resolveTypeAny: (attrMapping, key: string) => { ngFormControl: any, templateConfig: any } = null,\n        resolveTypeUndefined: (attrMapping, key: string) => { ngFormControl: any, templateConfig: any } = null\n    ) {\n        let result: any = {\n            ngFormControl: {},\n            templateConfig: {},\n        };\n        const isNonPrimitiveType = ['array', 'object'].indexOf(attributeMappingObject._type) > -1;\n        let attrMapping = isNonPrimitiveType ? attributeMappingObject._mapping : attributeMappingObject;\n\n        for (let key in attrMapping) {\n            // TODO: Skip attributes should be configurable\n            if (['id'].indexOf(key) > -1) continue;\n\n            let resolved = null;\n            let currentTemplateConfig = null;\n            let current = attrMapping[key];\n\n            // Object or Array\n            if (['object', 'array'].indexOf(current._type) > -1) {\n                if (current._type === 'array') {\n                    resolved = Ng2FormFactory.handleArray(current, key, formBuilder);\n                } else {\n                    // Handle Object\n                    let child = Ng2FormFactory.prepareAndCreateChildTemplateConfig(current, key, formBuilder)();\n\n                    resolved = {\n                        groupType: 'object',\n                        control: child.ngFormControl instanceof FormGroup ?\n                            child.ngFormControl : new FormGroup(child.ngFormControl, Ng2FormFactory.resolveFormValidators(child).validators),\n                        children: child.templateConfig\n                    };\n                }\n            }\n            // Primitive type and date\n            else if (current._type !== 'any') {\n                if (current !== 'undefined' && typeof current._type != 'undefined') {\n                    let { validators, valueNotEmpty } = Ng2FormFactory.resolveFormValidators(current);\n\n                    currentTemplateConfig = {\n                        type: current._type,\n                        control: new FormControl(valueNotEmpty ? current._value : '', validators)\n                    };\n                } else {\n                    resolved = resolveTypeUndefined ? resolveTypeUndefined(current, key) : null; // Resolve as null first\n                }\n            }\n            // Last case: Null value => any\n            else {\n                resolved = resolveTypeAny ? resolveTypeAny(current, key) : null; // Resolve as null first\n            }\n\n            // If resolved is still null, set it to default\n            if (!currentTemplateConfig && !resolved) {\n                let { validators } = Ng2FormFactory.resolveFormValidators(current);\n\n                resolved = {\n                    type: 'string',\n                    renderType: 'text',\n                    control: new FormControl('', validators)\n                };\n            }\n\n            // FIXME: this checking might be redundant\n            if (resolved) {\n                currentTemplateConfig = resolved;\n            }\n\n            currentTemplateConfig.label = Ng2FormFactory.generateLabel(key);\n            currentTemplateConfig.setValue = Ng2FormFactory.factorySetValueFunctionToTemplate(currentTemplateConfig);\n            Ng2FormFactory.resolveTemplateConfigByType(\n                current, currentTemplateConfig\n            );\n\n            result.ngFormControl[key] = currentTemplateConfig.control;\n            result.templateConfig[key] = currentTemplateConfig;\n        }\n\n        result.templateConfig.setValue = Ng2FormFactory.factorySetValueFunctionToTemplate(result.templateConfig);\n\n        if (isNonPrimitiveType) {\n            result.templateConfig = {\n                groupType: attributeMappingObject.type,\n                children: result.templateConfig\n            };\n\n            Ng2FormFactory.setTemplatePreset(attributeMappingObject, result.templateConfig);\n        }\n\n        return result;\n    }\n\n    static resolveFormValidators(current: any) {\n        let validators = current.formFactory && current.formFactory.validators ? current.formFactory.validators : [],\n            valueNotEmpty = [undefined, null].indexOf(current._value) === -1;\n\n        validators = typeof validators === 'function' ? validators(Ng2FormFactory.diContainer) : validators;\n\n        if (valueNotEmpty && validators.length === 0) validators.push(Validators.required);\n\n        return { validators, valueNotEmpty };\n    }\n\n    private static prepareAndCreateChildTemplateConfig(\n        currentInput: any,\n        key: string,\n        formBuilder: FormBuilder,\n        isRaw:boolean = false\n    ) {\n        const lambda = function () {\n            let current = null;\n\n            if (isRaw) {\n                // Mock an array type with targeted Prototype\n                current = new NonPrimitiveTypeMeta(\n                    'array',\n                    Extractor.generateMapping(\n                        new currentInput()\n                    )\n                );\n            } else {\n                current = currentInput;\n            }\n\n            let schemaTemp = null;\n\n            if (\n                'type' in current._mapping &&\n                [\n                    'any',\n                    'string',\n                    'boolean',\n                    'number',\n                    'date',\n                    ''\n                ].indexOf(current._mapping.type) > -1\n            ) {\n                // For primitive type array\n                let control = new FormControl(\n                    'value' in current._mapping ? current._mapping.value : '',\n                    [Validators.required]\n                ), templateConfig = {};\n\n                templateConfig[key] = {\n                    label: Ng2FormFactory.generateLabel(key),\n                    type: current._mapping.type,\n                    control,\n                };\n\n                schemaTemp = {\n                    ngFormControl: control,\n                    templateConfig\n                };\n\n                Ng2FormFactory.resolveTemplateConfigByType(\n                    current._mapping, templateConfig[key]\n                );\n            } else {\n                // For reference type array or object\n                schemaTemp = Ng2FormFactory.generateFormGroupByOATMapping(formBuilder, current._mapping);\n            }\n\n            schemaTemp.templateConfig.setValue = Ng2FormFactory.factorySetValueFunctionToTemplate(schemaTemp.templateConfig);\n\n            if ('formFactory' in current && typeof current.formFactory.onCreate === 'function') {\n                current.formFactory.onCreate(\n                    schemaTemp.templateConfig, Ng2FormFactory.diContainer\n                );\n            }\n\n            return {\n                ngFormControl:\n                    schemaTemp.ngFormControl instanceof FormControl || current.type === 'object' ?\n                        schemaTemp.ngFormControl :\n                        // For reference type array\n                        new FormGroup(schemaTemp.ngFormControl, Ng2FormFactory.resolveFormValidators(schemaTemp).validators),\n                templateConfig: schemaTemp.templateConfig\n            };\n        };\n\n        return lambda;\n    }\n\n    private static handleArray(current: any, key: string, formBuilder: FormBuilder) {\n        let ngFormArrayControl = new FormArray([], Ng2FormFactory.resolveFormValidators(current).validators);\n        let initChildren = [];\n        let arrayType = null;\n\n        let result = {\n            groupType: 'array',\n            arrayType:\n                current.formFactory && current.formFactory.arrayType ?\n                    arrayType :\n                    'type' in current._mapping ?\n                        'primitive' : 'object'\n            ,\n            control: ngFormArrayControl,\n            children: [],\n            childrenConfigName:[],\n            useConfig: 0,\n            add: null,\n            remove: null\n        };\n\n        if (current.formFactory && current.formFactory.objectDefinitions) {\n            let i = 0;\n            current.formFactory.objectDefinitions.forEach(function (each) {\n                initChildren[i] = Ng2FormFactory.prepareAndCreateChildTemplateConfig(each.structure, '', formBuilder, true);\n                result.childrenConfigName[i] = each.label;\n                i += 1;\n            });\n        } else {\n            initChildren[0] = Ng2FormFactory.prepareAndCreateChildTemplateConfig(current, key, formBuilder)\n        }\n\n        let add = function () {\n                let childConfig = initChildren[result.useConfig]();\n\n                const control = <FormArray>ngFormArrayControl;\n                control.push(childConfig.ngFormControl);\n                result.children.push(childConfig.templateConfig);\n\n                childConfig.templateConfig.flexibleObjectTypeName = result.childrenConfigName[result.useConfig];\n\n                if ('formFactory' in current && typeof current.formFactory.onPush === 'function') {\n                    current.formFactory.onPush(\n                        childConfig.templateConfig, Ng2FormFactory.diContainer\n                    );\n                }\n            },\n            remove = function (i: number) {\n                const control = <FormArray>ngFormArrayControl;\n                control.removeAt(i);\n                result.children.splice(i, 1);\n            };\n\n        result.add = add;\n        result.remove = remove;\n\n        // Ng2FormFactory.setTemplatePreset(current, result);\n\n        return result;\n    }\n\n    static factorySetValueFunctionToTemplate(templateObject) {\n        const lambda = function (rawValue) {\n            for (var key in rawValue) {\n                let targetTemplate = templateObject.groupType ? templateObject.children : templateObject;\n\n                if (key in targetTemplate) {\n                    if (targetTemplate[key].type) {\n                        if (typeof rawValue[key] != 'object') {\n                            if (\n                                'beforeSetValue' in targetTemplate[key]\n                            ) {\n                                targetTemplate[key].beforeSetValue(targetTemplate[key], rawValue);\n                            }\n\n                            targetTemplate[key].control.setValue(\n                                // Do not cast to string or boolean value will be broken\n                                rawValue[key]\n                            );\n\n                            if (\n                                'afterSetValue' in targetTemplate[key]\n                            ) {\n                                targetTemplate[key].afterSetValue(targetTemplate[key], rawValue);\n                            }\n                        } else if (typeof rawValue[key] != 'undefined' || rawValue[key] != null) { // skip if rawValue[key] is null or undefined\n                            // debugger;\n                            // Something goes wrong\n                        }\n                    } else {\n                        // For Object\n                        if (targetTemplate[key].groupType === 'object') {\n                            // Let FormGroup to handle value setting\n                            targetTemplate[key].setValue(rawValue[key]);\n                        } else {\n                            // Even this field is array, rawValue[key] can be null\n                            if (!rawValue[key]) continue;\n\n                            // Array\n                            // Remove all elements\n                            while (targetTemplate[key].control.controls.length > 0) {\n                                targetTemplate[key].remove(0);\n                            }\n\n                            let i = 0;\n\n                            rawValue[key].forEach(function (each) {\n                                if (\n                                    'resolveFlexibleObjectArrayConfig' in targetTemplate[key]\n                                ) {\n                                    targetTemplate[key].useConfig = targetTemplate[key].resolveFlexibleObjectArrayConfig(each);\n                                }\n\n                                targetTemplate[key].add();\n\n                                let fixForPrimitiveArray = {};\n                                fixForPrimitiveArray[key] = each;\n\n                                targetTemplate[key].children[i].setValue(\n                                    targetTemplate[key].arrayType !== 'object' ? fixForPrimitiveArray : each\n                                );\n\n                                i++;\n                            });\n                        }\n                    }\n                }\n            }\n        }\n\n        return lambda;\n    }\n\n    static resolveTemplateConfigByType(attrMapping, templateObj) {\n        if (attrMapping.type === 'boolean') {\n            templateObj.renderType = attrMapping.expandOptions ? 'radio' : 'checkbox';\n        } else if (attrMapping.options) {\n            if (attrMapping.options.length > 2 && attrMapping.maxChoices) {\n                templateObj.renderType = attrMapping.expandOptions ? (\n                    attrMapping.maxChoices == 1 ?\n                        'radio' : 'checkbox'\n                ) : 'select';\n            } else {\n                templateObj.renderType = attrMapping.expandOptions ? 'radio' : 'checkbox';\n            }\n        } else {\n            templateObj.renderType = attrMapping.type;\n            if (templateObj.type === 'string') templateObj.renderType = 'text';\n        }\n\n        Ng2FormFactory.setTemplatePreset(attrMapping, templateObj);\n    }\n\n    // Copy setting from OAT to templateConfig object\n    static setTemplatePreset(attrMapping, templateObj) {\n        [\n            'label',\n            'type',\n            'useComponent',\n            'beforeSetValue',\n            'afterSetValue',\n            'resolveFlexibleObjectArrayConfig',\n            'maxChoices',\n            'expandOptions',\n            'options',\n            'hints',\n            'hide',\n            'html',\n            'renderType',\n            'arrayType',\n            'autocomplete',\n            'matExtra',\n        ].forEach(function (each) {\n            if (attrMapping.formFactory && each in attrMapping.formFactory) {\n                templateObj[each] = attrMapping.formFactory[each];\n            }\n        });\n\n        templateObj.diContainer = Ng2FormFactory.diContainer;\n    }\n}\n","import {Pipe} from \"@angular/core\";\n\n@Pipe({\n    name: 'mapToIterable'\n})\nexport class MapToIterable {\n    transform(object: Object): Array<any> {\n        let result = [];\n\n        for (let key of Object.keys(object)) {\n            if (object.hasOwnProperty(key)) {\n                result.push({key, val: object[key]});\n            }\n        }\n\n        return result;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\nimport {\n    HbFormArrayComponent,\n    HbFormMatArrayComponent,\n    HbFormObjectComponent,\n    HbFormMatObjectComponent,\n    HbFormWidgetComponent,\n    HbFormMatWidgetComponent\n} from '../public-api';\nimport { IBaseFormConfig } from \"./class/decorators/FormConfig\";\nimport { IChoiceOptionsFormConfig } from \"./class/decorators/ChoiceOptions\";\nimport { IArrayOptionsFormConfig } from \"./class/decorators/ArrayOptions\";\nimport { MapToIterable } from \"./pipe/MapToIterable\";\n\nconst directivesAndPipes = [\n    HbFormArrayComponent,\n    HbFormMatArrayComponent,\n    HbFormObjectComponent,\n    HbFormMatObjectComponent,\n    HbFormWidgetComponent,\n    HbFormMatWidgetComponent,\n    MapToIterable,\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n\n        // Material Design\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatExpansionModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatRadioModule,\n        MatSelectModule\n    ],\n    declarations: directivesAndPipes,\n    exports: [\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatExpansionModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatRadioModule,\n        MatSelectModule,\n        ...directivesAndPipes,\n    ]\n})\nexport class HbFormModule {\n}\n\n// Actually template object is way more complicated. Types in here have not address all attributes but configurable only\nexport type TemplateObjectType = IBaseFormConfig | IChoiceOptionsFormConfig | IArrayOptionsFormConfig;\n\nexport interface ICustomComponent {\n    // TemplateObjectType\n    templateObject: any;\n    parentTemplateObject: any;\n}\n\nexport interface ICustomComponentConstructor {\n    new (...deps: any[]): ICustomComponent;\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵpropertyInterpolate2","i0.ɵɵtextInterpolate1","i0.ɵɵclassMapInterpolate2","Observable","ViewContainerRef","Component","ViewChild","i0.ɵɵclassMapInterpolate1","i0.ɵɵelement","i0.ɵɵclassMapInterpolate3","i0.ɵɵpropertyInterpolate","FormControl","Extractor","FormGroup","Validators","FormArray","Pipe","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatDatepickerModule","MatExpansionModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","NgModule"],"mappings":";;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,EAAC;AACD;IACO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACvF,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;IACvE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChF,YAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD;IACO,SAAS,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1D,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IACjI,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnI,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACtJ,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;AACD;IACO,SAAS,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE;IAC/C,IAAI,OAAO,UAAU,MAAM,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE;IACzE,CAAC;AACD;IACO,SAAS,UAAU,CAAC,WAAW,EAAE,aAAa,EAAE;IACvD,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;AACD;IACO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;IAC7D,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAChH,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;IAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;IACtH,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9E,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACO,SAAS,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;IAC3C,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrH,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7J,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACtE,IAAI,SAAS,IAAI,CAAC,EAAE,EAAE;IACtB,QAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;IACtE,QAAQ,OAAO,CAAC,EAAE,IAAI;IACtB,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzK,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,YAAY,QAAQ,EAAE,CAAC,CAAC,CAAC;IACzB,gBAAgB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM;IAC9C,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxE,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;IACjE,gBAAgB,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IACjE,gBAAgB;IAChB,oBAAoB,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;IAChI,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;IAC1G,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;IACzF,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;IACvF,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1C,oBAAoB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IAC3C,aAAa;IACb,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAClE,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACzF,KAAK;IACL,CAAC;AACD;IACO,SAAS,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE;IACzC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;AACD;IACO,SAAS,QAAQ,CAAC,CAAC,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClF,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,EAAE,OAAO;IAClD,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/C,YAAY,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;IACpD,SAAS;IACT,KAAK,CAAC;IACN,IAAI,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;AACD;IACO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,IAAI;IACR,QAAQ,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnF,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,gBAAgB,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;IACzC,KAAK;IACL,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;AACD;IACO,SAAS,QAAQ,GAAG;IAC3B,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;AACD;IACO,SAAS,cAAc,GAAG;IACjC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACxF,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;IACzE,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;AACF;IACO,SAAS,OAAO,CAAC,CAAC,EAAE;IAC3B,IAAI,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;AACD;IACO,SAAS,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;IACjE,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAClE,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1H,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9I,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;IACtF,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC5H,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;AACD;IACO,SAAS,gBAAgB,CAAC,CAAC,EAAE;IACpC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAChJ,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;AACD;IACO,SAAS,aAAa,CAAC,CAAC,EAAE;IACjC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrN,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IACpK,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;AACD;IACO,SAAS,oBAAoB,CAAC,MAAM,EAAE,GAAG,EAAE;IAClD,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;IACnH,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACO,SAAS,YAAY,CAAC,GAAG,EAAE;IAClC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,CAAC;IAC1C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACnG,IAAI,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;IACzB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACO,SAAS,eAAe,CAAC,GAAG,EAAE;IACrC,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;AACD;IACO,SAAS,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAE;IAC7D,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IACnC,QAAQ,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;AACD;IACO,SAAS,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE;IACpE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IACnC,QAAQ,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACpC,IAAI,OAAO,KAAK,CAAC;IACjB;;;;QCjMQA,+BAE+C;QAAAC,cAAgB;QAAAC,mBAAQ;;;QADhEC,oGAAkE,8IAAA;QAC1BC,iBAAgB;QAAhBC,yCAAgB;;;;QAIvDL,gCAEI;QAAAA,mCAKJ;QAHWM,mOAAU,oDAA4C,IAAC;QAF9DJ,mBAKJ;QAAAA,mBAAM;;;QAJKE,iBAAmD;QAAnDG,mFAAmD,uFAAA,qCAAA;QADnDJ,sGAAiE;;;;QAHhFK,+BACI;QAAAC,2HAEI;QAOJA,2KAChB;QAqBYC,4BAAe;;;;QA/BNN,iBAA0E;QAA1EG,0EAA0E,kBAAA;QAS/CH,iBAAuC;QAAvCG,8DAAuC;;;QAwB3EC,+BACI;QAAAR,sCAEA;QAAAC,kCAAA;QAAAC,mBAAW;QACfQ,4BAAe;;;QAHDN,iBAAuC;QAAvCG,uKAAuC,oCAAA;QACvCJ,mGAAiE;;;;QArCnFK,+BACI;QAAAC,8HACI;QAiCJA,8HACI;QAIRC,4BAAe;;;QAvCGN,iBAAmF;QAAnFG,+FAAmF;QAkCnFH,iBAAqC;QAArCG,6DAAqC;;;QAW3CP,mCACgG;QAAAC,cAAiB;QAAAC,mBAAQ;;;;QAAlHS,4JAAwF;QAACP,iBAAiB;QAAjBC,uCAAiB;;;;QAEjHG,+BACI;QAAAR,mCASJ;QAHWM,0WAA+B,MAAM,mDAAuC,oDAA4C,IAAC;QANhIJ,mBASJ;QAAAQ,4BAAe;;;;QARJN,iBAAuF;QAAvFO,2JAAuF;QAEvFJ,0CAAsB,0HAAA,qCAAA;QAEtBJ,gIAAoF;;;;QAO3FK,+BACI;QAAAR,mCAKJ;QAFWM,yXAA+B,MAAM,mDAAuC,oDAA4C,IAAC;QAHhIJ,mBAKJ;QAAAQ,4BAAe;;;;QAJJN,iBAAsB;QAAtBG,0CAAsB,0HAAA,qCAAA;;;;QAO7BP,mCAGJ;QADWM,wQAAU,sDAA8C,IAAC;QAFhEJ,mBAGJ;;;QAFWK,oEAA4C;;;QAVvDE,0KACI;QAOJA,4MACI;;;;QATUF,6FAA8D,kBAAA;;;QAjBpFC,+BACI;QAAAC,+IACgG;QAEhGA,4JACI;QAWJA,8LACI;QAcRC,4BAAe;;;;QA9BJN,iBAAoE;QAApEG,sIAAoE;QAG7DH,iBAAsD;QAAtDG,2DAAsD,kBAAA;;;QAL5EC,+BACI;QAAAC,8IACI;;QA+BRC,4BAAe;;;QAhCGN,iBAA8C;QAA9CG,2EAA8C;;;QAuCxDP,oCACI;QAAAC,cACJ;QAAAC,mBAAS;;;QAF8CK,0CAAsB;QACzEH,iBACJ;QADIQ,uFACJ;;;QANJZ,oCAII;QAAAS,0IACI;;QAERP,mBAAS;;;QANDK,oDAA4B;QAC5BJ,0FAA8D;QAE1DC,iBAA8C;QAA9CG,2EAA8C;;;QAJ1DE,iIAII;;;QAJIF,4DAAmC;;;QAtCnDC,+BAEI;QAAAC,8HACI;QAkCJA,gKACI;QASRC,4BAAe;;;;QA7CGN,iBAAqD;QAArDG,2DAAqD,kBAAA;;;QA+CvEP,kCACI;QAAAC,cACJ;QAAAC,mBAAO;;;QADHE,iBACJ;QADIQ,8KACJ;;;QAlGJJ,+BACI;QAAAC,iGAE+C;QAE/CA,+GACI;QAyCJA,+GAEI;QA+CJA,+FACI;QAERC,4BAAe;;;QAlGJN,iBAAkB;QAAlBG,0CAAkB;QAIXH,iBAAoC;QAApCG,4FAAoC;QA0CpCH,iBAAoC;QAApCG,4DAAoC;QAiD9BH,iBAAmB;QAAnBG,uEAAmB;;;;;QAlH/CP,gCAkBI;QAAAS,gGACI;QAoGJA,iIAA0B;QAC9BP,mBAAM;;;;QAxGFW,6LAA2F;QAJ3FN,uGAGE;QAGYH,iBAA4C;QAA5CG,kDAA4C,iBAAA;;;QCU1D,+BACY,QAAkC;YAAlC,aAAQ,GAAR,QAAQ,CAA0B;SAE7C;QAED,mCAAG,GAAH;YAAI,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,yBAAO;;YACP,OAAO,CAAC,GAAG,OAAX,OAAO,WAAQ,IAAI,GAAE;SACxB;QAED,+CAAe,GAAf;YACI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBAC3C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CACjD,IAAI,CAAC,IAAI,CAAC,YAAY,CACzB,CAAC;gBACF,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACtD,GAAG,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC;gBAEhD,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;aACzC;SACJ;QAED,0DAA0B,GAA1B;YACI,OAAO,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7E;QAED,wCAAQ,GAAR;YACI,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;gBACnC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAErB,IAAI,MAAM,GAAG,IAAI,CAAC;gBAClB,IAAI,UAAQ,GAAG,IAAI,CAAC;gBAEpB,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,IACI,IAAI,CAAC,OAAO,KACR,IAAI,CAAC,OAAO,CAAC,MAAM;oBACnB,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,CACrC,EACH;oBACE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;iBACzB;qBAAM,IACH,IAAI,CAAC,IAAI,KAAK,SAAS;oBACvB,IAAI,CAAC,UAAU,KAAK,UAAU,EAChC;oBACE,OAAO,GAAG,CAAC;4BACP,IAAI,EAAE,IAAI,CAAC,KAAK;4BAChB,KAAK,EAAE,IAAI;yBACd,CAAC,CAAC;iBACN;gBAED,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAChF;gBAED,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;oBAC/B,UAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBAChE;qBAAM,IAAI,EAAE,MAAM,YAAYO,eAAU,CAAC,EAAE;oBACxC,UAAQ,GAAG,OAAO,CAAC;iBACtB;gBAED,MAAM,GAAG,UAAQ,CAAC;gBAElB,IAAI,EAAE,UAAQ,YAAYA,eAAU,CAAC,EAAE;oBACnC,MAAM,GAAG,IAAIA,eAAU,CAAC,UAAC,CAAC;wBACtB,CAAC,CAAC,IAAI,CAAC,UAAQ,CAAC,CAAC;wBACjB,CAAC,CAAC,QAAQ,EAAE,CAAC;qBAChB,CAAC,CAAC;iBACN;gBAED,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;aACjC;SACJ;QAED,+CAAe,GAAf,UAAgB,GAAG;YACf,OAAO,GAAG,KAAK,MAAM,CAAA;SACxB;QAED,iDAAiB,GAAjB,UAAkB,MAAM,EAAE,MAAM;YAC5B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC7D,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC;YAE/B,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU;gBACxB,KAAK,UAAU;oBACX,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAElD,IAAI,SAAS,EAAE;wBACX,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;wBAElB,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACpE;yBAAM;wBACH,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEV,OAAO,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACnC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK;gCAAE,MAAM;yBACtD;wBAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBACzB;oBAED,MAAM;gBAEV,KAAK,OAAO;oBACR,IAAI,SAAS;wBAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAE1D,MAAM;aACb;SACJ;QAED,sCAAM,GAAN,UAAO,KAAK;YACR,OAAO,OAAO,KAAK,CAAC;SACvB;QAED,6CAAa,GAAb,UAAc,KAAa;YACvB,IAAI,KAAK,IAAI,qBAAqB,CAAC,OAAO,EAAE;gBACxC,OAAO,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC/C;YAED,IAAI,KAAK,EAAE;gBACP,OAAO,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK;qBAC9C,WAAW,EAAE;qBACb,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;qBACxB,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;qBACxB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;aAChC;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAA;aAC/D;SACJ;QAnIM,6BAAO,GAAG,EAAE,CAAC;kGALX,qBAAqB;oEAArB,qBAAqB;kDAOIC,qBAAgB;;;;;gBD1BtDN,yEAkBI;;gBAlBCF,wMAWA;;oCCXL;KAcA,IA8IC;wDAzIY,qBAAqB;kBALjCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,2BAA2B;oBACxC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;iBACpC;;sBAQIC,cAAS;uBAAC,aAAa,EAAE,EAAE,IAAI,EAAEF,qBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE;;;;QCX9Df,4BAA6B;QAAAC,cAAgB;QAAAC,mBAAK;;;QAArBE,iBAAgB;QAAhBC,yCAAgB;;;QAMjCL,oCACI;QAAAC,cACJ;QAAAC,mBAAS;;;;QAFiEK,+BAAW;QACjFH,iBACJ;QADIQ,iDACJ;;;;QAGJZ,oCAAoH;QAArBM,+MAAS,kBAAU,IAAC;QAACL,qBAAG;QAAAC,mBAAS;;;;;QARpIM,+BACI;QAAAR,mCAEI;QADIM,+PAA4B;QAChCG,iHACI;QAERP,mBAAS;QAETO,iHAAoH;QACxHC,4BAAe;;;QAPHN,iBAA4B;QAA5BG,iDAA4B,kDAAA;QACxBH,iBAAiE;QAAjEG,0DAAiE;QAKfH,iBAAgC;QAAhCG,wDAAgC;;;;QAI9FP,oCAII;QADIM,qQAA6B,kBAAU,IAAE;QAC7CL,cACJ;QAAAC,mBAAS;;;;QAJDgB,mGAAwE;QAG5Ed,iBACJ;QADIQ,wDACJ;;;QALAH,iHAII;;;QAFIF,0DAAiE;;;QAfjFC,+BACI;QAAAC,8GACI;QAUJA,+IACI;QAORC,4BAAe;;;;QAnBGN,iBAA0D;QAA1DG,mDAA0D,iBAAA;;;QAyB5EY,uCAGiD;;;;;;QAFjCZ,iCAAa,cAAA,wBAAA;;;QAQjBY,uCAGiD;;;;;QAFjCZ,qCAAiB,cAAA,wBAAA;;;QAGjCY,sCAG+C;;;;QAFhCZ,qCAAiB,qBAAA,wBAAA;;;QAGhCY,uCAGiD;;;;QAFjCZ,qCAAiB,qBAAA,wBAAA;;;QAVrCC,+BACI;QAAAC,8IAGgC;QAChCA,4IAG+B;QAC/BA,8IAGgC;QACpCC,4BAAe;;;QAZKN,iBAAuC;QAAvCG,4DAAuC;QAIxCH,iBAAsC;QAAtCG,0FAAsC;QAIrCH,iBAAuC;QAAvCG,2FAAuC;;;QAX/DP,6BAEI;QAAAS,0HACI;QAaRP,mBAAM;;;QAfDgB,6FAAkE;QACrDd,iBAA4C;QAA5CG,qEAA4C;;;QAHlEC,+BACI;QAAAC,kGAEI;;QAeRC,4BAAe;;;QAjBNN,iBAAmD;QAAnDG,qEAAmD;;;;QAmB5DP,oCAII;QADIM,+NAAS,0BAAc,IAAC;QAC5BL,0BACJ;QAAAC,mBAAS;;;QAjCbF,6BAGI;QAAAS,0GAGgC;QAEhCA,qGACI;QAmBJA,0FAII;QAERP,mBAAM;;;;;QAjCDW,0RAA2H;QAD3HV,4EAAgD;QAGjCC,iBAAgC;QAAhCG,wDAAgC;QAKlCH,iBAAgC;QAAhCG,wDAAgC;QAsBtCH,iBAAgC;QAAhCG,wDAAgC;;;QAM5CP,iCACI;QAAAC,cACJ;QAAAC,mBAAM;;;QADFE,iBACJ;QADIQ,kJACJ;;;;QA9EJZ,gCAcI;QAAAA,gCACI;QAAAS,2EAA6B;QAE7BA,+FACI;QAoBRP,mBAAS;QAETO,6EAGI;;QAiCJA,6EACI;QAERP,mBAAM;;;QA9EDkB,uMAA8F;QAQ9Fb,iDAA0B,+DAAA;QAT1BJ,sCAAmB;QAeZC,iBAAwB;QAAxBG,gDAAwB;QAEdH,iBAA0C;QAA1CG,kEAA0C;QAyBvDH,iBAAsG;QAAtGG,oIAAsG;QAkCxFH,iBAAmB;QAAnBG,uEAAmB;;;QCpEA,wCAAqB;QAL/D;;SAMC;6HADY,oBAAoB;mEAApB,oBAAoB;gBDRjCE,wEAcI;;gBAZCF,iIAMC;;mCCRN;KASC,CADyC,qBAAqB,GAC9D;uEADY,oBAAoB;wDAApB,oBAAoB;kBALhCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,0BAA0B;oBACvC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;iBACpC;;;;QCQWhB,4BAA6B;QAAAC,cAAgB;QAAAC,mBAAK;;;QAArBE,iBAAgB;QAAhBC,yCAAgB;;;QAQ7BL,wCACI;QAAAC,cACJ;QAAAC,mBAAa;;;;QAFiEK,+BAAW;QACrFH,iBACJ;QADIQ,iDACJ;;;;QAIRZ,oCAMI;QAFIM,wOAAS,kBAAU,IAAC;QAExBL,uBACJ;QAAAC,mBAAS;;;;;QAlBbM,+BACI;QAAAR,wCACI;QAAAA,uCAGI;QAFQM,4RAA4B;QAEpCG,kJACI;QAERP,mBAAa;QACjBA,mBAAiB;QAEjBO,0IAMI;QAERC,4BAAe;;;QAhBKN,iBAA4B;QAA5BG,iDAA4B,kDAAA;QAExBH,iBAAiE;QAAjEG,0DAAiE;QAS7EH,iBAAgC;QAAhCG,wDAAgC;;;;QAQxCP,oCAII;QADIM,8RAA6B,kBAAU,IAAE;QAC7CL,cACJ;QAAAC,mBAAS;;;QADLE,iBACJ;QADIQ,wDACJ;;;QALAH,0IAII;;;QAFIF,0DAAiE;;;QAzBjFC,+BACI;QAAAC,uIACI;QAoBJA,wKACI;QAORC,4BAAe;;;;QA7BGN,iBAA0D;QAA1DG,mDAA0D,iBAAA;;;QAJhFP,wCACI;QAAAS,oGAA6B;QAE7BA,wHACI;QA8BRP,mBAAiB;;;QAjCTE,iBAAwB;QAAxBG,gDAAwB;QAEdH,iBAA0C;QAA1CG,kEAA0C;;;QA0CxDY,2CAAkH;;;;;;QAA7DZ,iCAAa,cAAA,wBAAA;;;QAMtDY,2CACqB;;;;;QADuCZ,qCAAiB,cAAA,wBAAA;;;QAE7EY,0CACoB;;;;QADsCZ,qCAAiB,qBAAA,wBAAA;;;QAE3EY,2CACqB;;;;QADuCZ,qCAAiB,qBAAA,wBAAA;;;QALjFC,+BACI;QAAAC,8JACA;QACAA,4JACA;QACAA,8JACA;QACJC,4BAAe;;;QANSN,iBAAuC;QAAvCG,4DAAuC;QAExCH,iBAAsC;QAAtCG,0FAAsC;QAErCH,iBAAuC;QAAvCG,2FAAuC;;;QAPnEP,6BAEI;QAAAS,kIACI;QAORP,mBAAM;;;QATDgB,yEAA8C;QACjCd,iBAA4C;QAA5CG,qEAA4C;;;QAHlEC,+BACI;QAAAC,0GAEI;;QASRC,4BAAe;;;QAXNN,iBAAmD;QAAnDG,qEAAmD;;;;QAa5DP,oCAGI;QADIM,uOAAS,0BAAc,IAAC;QAC5BL,0BACJ;QAAAC,mBAAS;;;QA3BbF,6BAOI;QAAAS,0HAA6F;QAE7FA,6GACI;QAaJA,kGAGI;QAERP,mBAAM;;;;;QA3BDW,0RAA2H;QAD3HV,oDAA6B;QAOVC,iBAAgC;QAAhCG,wDAAgC;QAEtCH,iBAAgC;QAAhCG,wDAAgC;QAetCH,iBAAgC;QAAhCG,wDAAgC;;;QAM5CP,oCACI;QAAAC,cACJ;QAAAC,mBAAS;;;QADLE,iBACJ;QADIQ,kJACJ;;;;QApFRZ,qCAaI;QAAAA,yCACI;QAAAS,2GACI;QAkCRP,mBAAkB;QAElBF,0CACI;QAAAS,qFAOI;;QAuBJA,2FACI;QAERP,mBAAmB;QACvBA,mBAAW;;;QAtFDkB,qNAA4G;QAS5Gb,iDAA0B,+DAAA;QAR1BJ,sCAAmB;QAaLC,iBAAwB;QAAxBG,gDAAwB;QAwCnCH,iBAIC;QAJDG,oIAIC;QAwBmBH,iBAAmB;QAAnBG,uEAAmB;;;QC1EP,2CAAoB;QALjE;;SAMC;sIADY,uBAAuB;sEAAvB,uBAAuB;gBDRpCE,qFAaI;;gBAXMF,iIAMC;;sCCRX;KASC,CAD4C,oBAAoB,GAChE;0EADY,uBAAuB;wDAAvB,uBAAuB;kBALnCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,8BAA8B;oBAC3C,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;iBACpC;;;;QCOGhB,4BACI;QAAAC,cACJ;QAAAC,mBAAK;;;QADDE,iBACJ;QADIQ,oDACJ;;;QAKYO,sCAKkB;;;;QAHdZ,oCAAiB,oBAAA,uBAAA;;;QAIrBY,qCAMiB;;;;QAJbZ,oCAAiB,oBAAA,8BAAA,uBAAA;;;QAKrBY,sCAKkB;;;;QAHdZ,oCAAiB,oBAAA,uBAAA;;;QAhBzBC,+BACI;QAAAC,yHAKC;QACDA,uHAMC;QACDA,yHAKC;QACLC,4BAAe;;;QAlBPN,iBAAiE;QAAjEG,wFAAiE;QAMjEH,iBAAsC;QAAtCG,wFAAsC;QAOtCH,iBAAiE;QAAjEG,sHAAiE;;;QAhB7EP,6BACI;QAAAS,sGACI;QAoBRP,mBAAM;;;QAtBkDgB,iEAAuC;QAC7Ed,iBAA4C;QAA5CG,mEAA4C;;;QAuB9DP,kCACI;QAAAC,cACJ;QAAAC,mBAAO;;;QADHE,iBACJ;QADIQ,kJACJ;;;;QA7CRZ,gCAcI;QAAAS,4EACI;QAGJT,gCACI;QAAAS,8EACI;;QAuBJA,gFACI;QAERP,mBAAM;QACVA,mBAAM;;;QAnCDW,uKAAqE;QALrEN,iDAA0B,2FAAA;QAOvBH,iBAA8E;QAA9EG,2HAA8E;QAKzEH,iBAAkD;QAAlDG,wEAAkD;QAwBnCH,iBAAmB;QAAnBG,uEAAmB;;;QCnCJ,yCAAqB;QALhE;;SAMC;gIADY,qBAAqB;oEAArB,qBAAqB;gBDRlCE,yEAcI;;gBAdCF,iIAMA;;oCCNL;KASC,CAD0C,qBAAqB,GAC/D;wEADY,qBAAqB;wDAArB,qBAAqB;kBALjCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAG,2BAA2B;oBACzC,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;iBAC1C;;;;QCKGhB,yCACI;QAAAA,wCACI;QAAAC,cACJ;QAAAC,mBAAiB;QACrBA,mBAAkB;;;QAFVE,iBACJ;QADIQ,oDACJ;;;QAKQO,0CAKqB;;;;QAHbZ,oCAAiB,oBAAA,uBAAA;;;QAIzBY,yCAMoB;;;;QAJZZ,oCAAiB,oBAAA,8BAAA,uBAAA;;;QAKzBY,0CAKqB;;;;QAHbZ,oCAAiB,oBAAA,uBAAA;;;QAhB7BC,+BACI;QAAAC,yIAKA;QACAA,uIAMA;QACAA,yIAKA;QACJC,4BAAe;;;QAlBHN,iBAAiE;QAAjEG,wFAAiE;QAMjEH,iBAAsC;QAAtCG,wFAAsC;QAOtCH,iBAAiE;QAAjEG,sHAAiE;;;QAhBjFP,6BACI;QAAAS,8GACI;QAoBRP,mBAAM;;;QAtBkDgB,iEAAuC;QAC7Ed,iBAA4C;QAA5CG,mEAA4C;;;QAsB9DP,oCACI;QAAAC,cACJ;QAAAC,mBAAS;;;QADLE,iBACJ;QADIQ,kJACJ;;;;QA3CRZ,qCAYI;QAAAS,8GACI;QAIJT,6CACI;QAAAS,sFACI;;QAsBJA,4FACI;QAERP,mBAAmB;QACvBA,mBAAW;;;QAlCDW,uKAAqE;QALrEN,iDAA0B,2FAAA;QAMfH,iBAA8E;QAA9EG,2HAA8E;QAMtFH,iBAAkD;QAAlDG,wEAAkD;QAuB9BH,iBAAmB;QAAnBG,uEAAmB;;;QCjCN,4CAAqB;QALnE;;SAMC;yIADY,wBAAwB;uEAAxB,wBAAwB;gBDRrCE,sFAYI;;gBAZMF,iIAKJ;;uCCLN;KASC,CAD6C,qBAAqB,GAClE;2EADY,wBAAwB;wDAAxB,wBAAwB;kBALpCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAG,+BAA+B;oBAC7C,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;iBAC1C;;;;;QCmBeG,4BAIO;;;QADFZ,kFAAqC;;;QAU1CP,sCACI;QAAAA,gCACI;QAAAC,cACJ;QAAAC,mBAAS;QACbA,mBAAW;;;QAFHE,iBACJ;QADIQ,qLACJ;;;QAGJO,4BAGiD;;;QAA5CZ,kFAAqC;;;;QAvB9CP,2CACI;QAAAS,gIAIC;QAEDT,kCAOA;QAJOM,kOAAU,oDAA4C,IAAC;QAH9DJ,mBAOA;QAAAO,2IACI;QAKJA,iIAG2C;QAC/CP,mBAAiB;;;QArBRE,iBAAiC;QAAjCG,0HAAiC;QAM/BH,iBAAmD;QAAnDG,iFAAmD,2EAAA,oCAAA;QADnDJ,+EAA8C;QAM7BC,iBAAmB;QAAnBG,uEAAmB;QAQtCH,iBAAiC;QAAjCG,0HAAiC;;;QAgB9BP,wCACI;QAAAA,8BAAM;QAAAC,cAAkB;QAAAC,mBAAO;QACnCA,mBAAa;;;QAF4DK,0CAAsB;QACrFH,iBAAkB;QAAlBC,wCAAkB;;;QAIhCL,sCACI;QAAAA,gCACI;QAAAC,cACJ;QAAAC,mBAAS;QACbA,mBAAW;;;QAFHE,iBACJ;QADIQ,qLACJ;;;;QAnBRZ,wCAChB;QACoBA,mCAQA;QALOM,gPAAU,oDAA4C,IAAE;QAH/DJ,mBAQA;QAAAF,oDACI;QAAAS,6JACI;;QAERP,mBAAmB;QAEnBO,yJACI;QAIRP,mBAAiB;;;;QAfNE,iBAA4E;QAA5EiB,2HAA4E;QAF5Ed,mFAAmD,qCAAA,yBAAA;QADnDJ,gFAA4C;QAQnCC,iBAA4D;QAA5DG,yFAA4D;QAKpDH,iBAAmB;QAAnBG,yEAAmB;;;QAhB/CE,mJAChB;;;QADgCF,wEAAiD;;;QA5BzEC,+BACI;QAAAC,qIACI;QAyBJA,+JACI;QAuBRC,4BAAe;;;;QAlDKN,iBAA0E;QAA1EG,0EAA0E,iBAAA;QA0B1DH,iBAAuC;QAAvCG,8DAAuC;;;QAgCvEP,sCACI;QAAAA,gCACI;QAAAC,cACJ;QAAAC,mBAAS;QACbA,mBAAW;;;QAFHE,iBACJ;QADIQ,qLACJ;;;QATRZ,wCACI;QAAAA,sCAGA;QAAAC,8BAAA;QAAAC,mBAAW;QAEXO,4HACI;QAIRP,mBAAiB;;;QAVeE,iBAA4B;QAA5BG,mDAA4B,gFAAA;QAE9CJ,6EAA4C;QAG9BC,iBAAmB;QAAnBG,uEAAmB;;;;QA/DnDC,+BAII;QAAAC,kHACI;QAoDJA,sHACI;QAWRC,4BAAe;;;QAjEGN,iBAAmF;QAAnFG,iGAAmF;QAqDjFH,iBAAsC;QAAtCG,8DAAsC;;;;QAiB9CP,8CAQI;QAFAM,yUAA4C;QAE5CL,cACJ;QAAAC,mBAAmB;;;;QANfK,0CAAsB,0HAAA;QAEtBJ,gIAAoF;QAGpFC,iBACJ;QADIQ,kDACJ;;;QAVJZ,6CACI;QAAAS,mJAQI;QAERP,mBAAkB;;;QAXsDK,oDAA4B;QAG5FH,iBAAmC;QAAnCG,gDAAmC;;;;QAYnCP,0CAOI;QAHAM,4UAA4C;QAG5CL,cACJ;QAAAC,mBAAe;;;;QANXK,0CAAsB,0HAAA,qCAAA;QAKtBH,iBACJ;QADIQ,kDACJ;;;QATJJ,+BACI;QAAAC,sJAOI;QAERC,4BAAe;;;QARPN,iBAAmC;QAAnCG,gDAAmC;;;;QAWvCP,+BAAO;QAAAC,cAAgB;QAAAC,mBAAQ;QAC/BF,0CAEe;QADDM,2OAAU,sDAA8C,IAAC;QACvEJ,mBAAe;;;QAHRE,iBAAgB;QAAhBC,0CAAgB;QACTD,iBAA4C;QAA5CG,oEAA4C;;;QAd9DE,uIACI;QAWJA,wKACI;;;;QAbUF,6FAA8D,kBAAA;;;QAfpFP,6BACI;QAAAS,+HACI;QAYJA,0JACI;QAmBRP,mBAAM;;;;QAjCeE,iBAAsD;QAAtDG,2DAAsD,kBAAA;;;QA0C/DP,wCACI;QAAAC,cACJ;QAAAC,mBAAa;;;QAF8CK,0CAAsB;QAC7EH,iBACJ;QADIQ,uFACJ;;;QAPJZ,wCAKI;QAAAS,0IACI;;QAERP,mBAAa;;;QANTK,oDAA4B,4EAAA;QAGhBH,iBAA8C;QAA9CG,2EAA8C;;;QAK9DP,sCACI;QAAAA,gCACI;QAAAC,cACJ;QAAAC,mBAAS;QACbA,mBAAW;;;QAFHE,iBACJ;QADIQ,qLACJ;;;QAdRZ,wCACI;QAAAS,6HAKI;QAKJA,yHACI;QAIRP,mBAAiB;;;QAdTE,iBAAmC;QAAnCG,4DAAmC;QASfH,iBAAmB;QAAnBG,yEAAmB;;;QAjDvDC,+BACI;QAAAC,iGACI;QAmCJA,oJACI;QAkBRC,4BAAe;;;;QAvDNN,iBAAqD;QAArDG,2DAAqD,kBAAA;;;;;QA5FlEP,gCAkBI;QAAAS,oIAA0B;QAE1BA,mGAII;QAmEJA,mGACI;QAwDRP,mBAAM;;;QApIDW,6LAA2F;QAJ3FN,yGAGE;QAKWH,iBAGb;QAHaG,yHAGb;QAoEaH,iBAA2F;QAA3FG,6HAA2F;;;QCnF/D,4CAAqB;QALnE;;SAkBC;QAZG,2CAAQ,GAAR;YACI,iBAAM,QAAQ,WAAE,CAAC;YAEjB,IACI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM;gBAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EACpE;gBACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAC7B,CAAA;aACJ;SACJ;yIAZQ,wBAAwB;uEAAxB,wBAAwB;gBDRrCE,4EAkBI;;gBAlBCF,wMAWC;;uCCXN;KAqBC,CAb6C,qBAAqB,GAalE;2EAbY,wBAAwB;wDAAxB,wBAAwB;kBALpCS,cAAS;mBAAC;oBACP,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,+BAA+B;oBAC5C,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;iBACpC;;;;QCJG,kBAAsB,KAAoB;YAApB,UAAK,GAAL,KAAK,CAAe;SAAI;QAE9C,sBAAI,0BAAI;iBAAR;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QACL,eAAC;IAAD,CAAC,IAAA;;QAEsC,qCAAQ;QAC3C,2BACc,MAAW;YADzB,YAGI,mBACoB;gBACZ,QAAQ;gBACR,QAAQ;gBACR,SAAS;aACZ,CAAC,OAAO,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,MAAM,GAAG,KAAK,EACxD,SACJ;YATa,YAAM,GAAN,MAAM,CAAK;;SASxB;QAED,sBAAI,oCAAK;iBAAT;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;WAAA;QACL,wBAAC;IAAD,CAhBA,CAAuC,QAAQ,GAgB9C;;QAEyC,wCAAQ;QAC9C,8BACI,IAAiC,EACzB,QAAoB;QACpB,MAAkB;YADlB,yBAAA,EAAA,eAAoB;YACpB,uBAAA,EAAA,aAAkB;YAH9B,YAKI,kBAAM,IAAI,CAAC,SACd;YAJW,cAAQ,GAAR,QAAQ,CAAY;YACpB,YAAM,GAAN,MAAM,CAAY;;SAG7B;QAED,sBAAI,yCAAO;iBAAX;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;WAAA;QAED,sBAAI,uCAAK;iBAAT;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;WAAA;QACL,2BAAC;IAAD,CAhBA,CAA0C,QAAQ,GAgBjD;IAID,IAAM,mBAAmB,GAAG,eAAe,CAAC;aAE5B,aAAa,CAAC,EAAqD;QAC/E,OAAO,OAAO,CAAC,QAAQ,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACrD,CAAC;;QAED;SA8MC;QA7MU,4CAAe,GAAtB,UACI,KAAU,EACV,OAIM;YAJN,wBAAA,EAAA,YAIM;YAEN,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gBACpB,iBAAiB,EAAE,WAAW;gBAC9B,eAAe,EAAE,KAAK;aACzB,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,IAAI,MAAM,GAAQ,IAAI,CAAC;;YAGvB,IAAI,KAAK,YAAY,KAAK,EAAE;gBACxB,OAAO,GAAG,IAAI,oBAAoB,CAC9B,OAAO,EACP,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAC/C,CAAC;aACL;iBAAM;;gBAEH,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE;oBACnB,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;wBAClC,IAAI,YAAY,GAAQ,EAAE,CAAC;;wBAG3B,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;4BAChC,YAAY,GAAG,SAAS,CAAC,yBAAyB,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;;yBAG3E;6BAAM,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;4BACzC,YAAY,GAAG,IAAI,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;yBACpD;wBAED,IAAI,OAAO,CAAC,WAAW,CAAC,mBAAmB,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE;4BACtD,OAAO,CAAC,WAAW,CACf,mBAAmB,EAAE,KAAK,EAAE,GAAG,CAClC,CACG,KAAK,EAAE,GAAG,EAAE,YAAY,CAC3B,CAAC;yBACL;6BAAM,IAAI,OAAO,OAAO,CAAC,UAAU,KAAK,UAAU,EAAE;4BACjD,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;yBAChD;;wBAGD,OAAO,CACH,SAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CACrD,GAAG,YAAY,CAAC;qBACpB;iBACJ;aACJ;YAED,IACI,OAAO,KAAK,KAAK,QAAQ,EAC3B;gBACE,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;oBACvD,MAAM,GAAG,IAAI,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;iBACxD;qBAAM;oBACH,MAAM,GAAG,OAAO,CAAC;iBACpB;aACJ;iBAAM;gBACH,MAAM,GAAG,EAAE,OAAO,SAAA,EAAE,CAAC;aACxB;YAED,IAAI,OAAO,CAAC,WAAW,CAAC,mBAAmB,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE;gBAC7D,OAAO,CAAC,WAAW,CACf,mBAAmB,EAAE,KAAK,CAAC,WAAW,CACzC,CACG,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,CAClC,CAAC;aACL;iBAAM,IAAI,OAAO,OAAO,CAAC,UAAU,KAAK,UAAU,EAAE;gBACjD,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;aAC3C;YAED,OAAO,MAAM,CAAA;SAChB;QAEM,sDAAyB,GAAhC,UAAiC,MAAW,EAAE,GAAG,EAAE,OAAY;YAC3D,IAAI,YAAY,GAAG,IAAI,CAAC;;YAGxB,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;gBACtB,YAAY,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;;aAG9C;iBAAM,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;gBACrC,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;gBAEzB,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAC/B,YAAY,GAAG,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;iBAEtF;qBAAM;oBACH,YAAY,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;iBAC7D;;aAGJ;iBAAM,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,IAAI,EAAE;gBACpC,YAAY,GAAG,IAAI,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;;aAGtE;iBAAM;gBACH,YAAY,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;aAClE;YAED,OAAO,YAAY,CAAC;SACvB;QAEM,gDAAmB,GAA1B,UAA2B,OAAY,EAAE,GAAG,EAAE,MAAW;YACrD,IAAI,SAAS,GAAG,GAAG,CAAC;;YAGpB,IAAI,OAAO,CAAC,eAAe,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBAClD,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBAE3C,IAAI,UAAU,IAAI,MAAM,EAAE;oBACtB,SAAS,GAAG,UAAU,CAAC;iBAC1B;aACJ;;;YAID,IAAI,OAAO,CAAC,iBAAiB,KAAK,YAAY,EAAE;gBAC5C,SAAS,GAAG,SAAS,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;aAC7D;YAED,OAAO,SAAS,CAAC;SACpB;;QAGM,gDAAmB,GAA1B,UAA2B,IAAS,EAAE,OAAY;YAC9C,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gBACpB,iBAAiB,EAAE,WAAW;gBAC9B,eAAe,EAAE,KAAK;aACzB,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,IAAI,YAAY,KAAK,EAAE;gBACvB,MAAM,GAAG,EAAE,CAAC;gBAEZ,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;oBACtB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;iBAC5D,CAAC,CAAC;aACN;iBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBACjC,MAAM,GAAG,EAAE,CAAC;gBAEZ,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;oBAClB,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;wBACnD,IAAI,QAAQ,GAAG,GAAG,CAAC;wBAEnB,IAAI,OAAO,CAAC,iBAAiB,KAAK,YAAY,EAAE;4BAC5C,QAAQ,GAAG,SAAS,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;yBACtD;wBAED,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;4BAC/B,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;yBACxE;6BAAM;4BACH,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;yBAChC;qBACJ;iBACJ;aACJ;YAED,OAAO,MAAM,CAAC;SACjB;;QAGM,gDAAmB,GAA1B,UAA2B,IAAS,EAAE,SAAmB;YAAnB,0BAAA,EAAA,cAAmB;YACrD,IAAI,MAAM,GAAG,IAAI,CAAC;YAElB,IAAI,IAAI,YAAY,KAAK,EAAE;gBACvB,MAAM,GAAG,EAAE,CAAC;gBAEZ,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;oBACtB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;iBACnD,CAAC,CAAC;aACN;iBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBACjC,MAAM,GAAG,EAAE,CAAC;gBAEZ,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;oBAClB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;wBAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,IAAI,EAAE;4BAC3B,MAAM,CAAC,GAAG,CAAC;gCACP,MAAM,IAAI,SAAS;oCACnB,SAAS,CAAC,IAAI,YAAY,QAAQ;oCAC9B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;yBAC/D;6BAAM;4BACH,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;yBAC1D;qBACJ;yBAAM,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;wBACxC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC3B;iBACJ;aACJ;YAED,OAAO,MAAM,CAAC;SACjB;QAEM,qDAAwB,GAA/B,UAAgC,KAAK;YACjC,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YAEjE,OAAO,MAAM,CAAC;SACf;QACL,mCAAC;IAAD,CAAC,IAAA;IAED,IAAI,SAAS,GAAG,4BAA4B;;QChO/B,gBAAgB,GAAG,MAAM,CAAC,YAAY,EAAE;aAErC,UAAU,CAAC,OAAwB;QAC/C,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;iBAC7B,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;iBACxB,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;iBACxB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAChC;QAED,OAAO,OAAO,CAAC,QAAQ,CAAC,gBAAgB,EACpC,MAAM,CAAC,MAAM,CAAC;YACV,WAAW,EAAE,KAAK;YAClB,IAAI,MAAA;SACP,EAAE,OAAO,CAAC,CACd,CAAC;IACN;;QCjDa,kBAAkB,GAAG,MAAM,CAAC,yBAAyB,EAAE;aAEpD,YAAY,CAAC,OAAgC;QACzD,OAAO,OAAO,CAAC,QAAQ,CACnB,kBAAkB,EAClB,MAAM,CAAC,MAAM,CACgB,EACxB,EAAE,OAAO,CACb,CACJ,CAAC;IACN;;QCXa,mBAAmB,GAAG,MAAM,CAAC,0BAA0B,EAAE;aAEtD,aAAa,CAAC,OAAiC;QAC3D,OAAO,OAAO,CAAC,QAAQ,CACnB,mBAAmB,EACnB,MAAM,CAAC,MAAM,CACiB,EACzB,EAAE,OAAO,CACb,CACJ,CAAC;IACN;;QCFa,kBAAkB,GAAG,MAAM,CAAC,sBAAsB,EAAE;aAEjD,mBAAmB,CAAC,OAA6B;QAC7D,OAAO,OAAO,CAAC,QAAQ,CACnB,kBAAkB,EAAE;YAChB,YAAY,EAAE,MAAM,CAAC,MAAM,CACD,EACrB,EAAE,OAAO,CACb;SACJ,CACJ,CAAC;IACN;;QCFa,mBAAmB,GAAG,MAAM,CAAC,0BAA0B,EAAE;aAEtD,aAAa,CAAC,OAAiC;QAC3D,OAAO,OAAO,CAAC,QAAQ,CACnB,mBAAmB,EACnB,MAAM,CAAC,MAAM,CAAC;YACN,UAAU,EAAE,CAAC;SAChB,EACyB;YACtB,UAAU,EAAE,QAAQ;SACvB,EAAE,OAAO,CACb,CACJ,CAAC;IACN;;;QCzBI,uBAAY,MAAe;YAL3B,UAAK,GAAG,EAAE,CAAC;YACX,YAAO,GAAG,IAAIM,iBAAW,EAAE,CAAC;YAC5B,eAAU,GAAG,UAAU,CAAC;YACxB,YAAO,GAAG,EAAE,CAAC;YAGT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B;QACL,oBAAC;IAAD,CAAC,IAAA;QAaY,4BAA4B,GAAG,MAAM,CAAC,mCAAmC,EAAE;aAExE,sBAAsB,CAAC,OAA0C;QAC7E,OAAO,OAAO,CAAC,QAAQ,CACnB,4BAA4B,EAC5B,MAAM,CAAC,MAAM,CAAC;YACN,SAAS,EAAE,MAAM;SACpB,EACkC;YAC/B,UAAU,EAAE,IAAI;SACnB,EAAE,OAAO,CACb,CACJ,CAAC;IACN;;QC5Ba,yBAAyB,GAAG,MAAM,CAAC,gCAAgC,EAAE;aAElE,mBAAmB,CAAC,OAAuC;QACvE,OAAO,OAAO,CAAC,QAAQ,CACnB,yBAAyB,EACzB,MAAM,CAAC,MAAM,CACT;YACI,aAAa,EAAE,KAAK;SACvB,EAAE,OAAO,EAAE;YACR,SAAS,EAAE,QAAQ;SACtB,CACJ,CACJ,CAAC;IACN;;QChBa,qBAAqB,GAAG,MAAM,CAAC,4BAA4B,EAAE;aAE1D,eAAe,CAAC,OAAmC;QAC/D,OAAO,OAAO,CAAC,QAAQ,CACnB,qBAAqB,EACrB,MAAM,CAAC,MAAM,CACmB,EAC3B,EAAE,OAAO,CACb,CACJ,CAAC;IACN;;aCRgB,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ;QAC/C,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YACvB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC1B;gBACI,gBAAgB;gBAChB,kBAAkB;gBAClB,mBAAmB;gBACnB,mBAAmB;gBACnB,4BAA4B;gBAC5B,yBAAyB;gBACzB,kBAAkB;gBAClB,qBAAqB;aACxB,CAAC,OAAO,CAAC,UAAC,UAAU;gBACjB,IAAI,eAAe,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAE3C,IAAI,GAAG,EAAE;oBACL,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC7B;gBAED,IACI,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,eAAe,CAAC,EACrD;oBACE,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EACnC,QAAQ,CAAC,WAAW,EACpB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,eAAe,CAAC,CACtD,CAAC;iBACL;aACJ,CAAC,CAAC;SACN;IACL,CAAC;aAEe,WAAW;QACvB,OAAO,aAAa,CAAC,aAAa,CAAC,CAAC;IACxC;;;QC9BA;SAqYC;QApYU,wCAAyB,GAAhC,UACI,WAAwB,EACxB,MAAW,EACX,cAGQ,EACR,OAAiB;YAJjB,+BAAA,EAAA,qBAGQ;YACR,wBAAA,EAAA,YAAiB;YAEjB,OAAO,cAAc,CAAC,6BAA6B,CAC/C,WAAW,EAAEC,4BAAS,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,cAAc,CAC1E,CAAC;SACL;QAIM,4BAAa,GAApB,UAAqB,GAAG;YACpB,IAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEpE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/D;QAEM,4CAA6B,GAApC,UACI,WAAwB,EACxB,sBAA2B;QAC3B,cAAgG,EAChG,oBAAsG;YADtG,+BAAA,EAAA,qBAAgG;YAChG,qCAAA,EAAA,2BAAsG;YAEtG,IAAI,MAAM,GAAQ;gBACd,aAAa,EAAE,EAAE;gBACjB,cAAc,EAAE,EAAE;aACrB,CAAC;YACF,IAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1F,IAAI,WAAW,GAAG,kBAAkB,GAAG,sBAAsB,CAAC,QAAQ,GAAG,sBAAsB,CAAC;YAEhG,KAAK,IAAI,GAAG,IAAI,WAAW,EAAE;;gBAEzB,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAAE,SAAS;gBAEvC,IAAI,QAAQ,GAAG,IAAI,CAAC;gBACpB,IAAI,qBAAqB,GAAG,IAAI,CAAC;gBACjC,IAAI,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;;gBAG/B,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;oBACjD,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,EAAE;wBAC3B,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;qBACpE;yBAAM;;wBAEH,IAAI,KAAK,GAAG,cAAc,CAAC,mCAAmC,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,CAAC;wBAE5F,QAAQ,GAAG;4BACP,SAAS,EAAE,QAAQ;4BACnB,OAAO,EAAE,KAAK,CAAC,aAAa,YAAYC,eAAS;gCAC7C,KAAK,CAAC,aAAa,GAAG,IAAIA,eAAS,CAAC,KAAK,CAAC,aAAa,EAAE,cAAc,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;4BACpH,QAAQ,EAAE,KAAK,CAAC,cAAc;yBACjC,CAAC;qBACL;iBACJ;;qBAEI,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;oBAC9B,IAAI,OAAO,KAAK,WAAW,IAAI,OAAO,OAAO,CAAC,KAAK,IAAI,WAAW,EAAE;wBAC5D,IAAA,kDAA6E,EAA3E,0BAAU,EAAE,gCAA+D,CAAC;wBAElF,qBAAqB,GAAG;4BACpB,IAAI,EAAE,OAAO,CAAC,KAAK;4BACnB,OAAO,EAAE,IAAIF,iBAAW,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE,UAAU,CAAC;yBAC5E,CAAC;qBACL;yBAAM;wBACH,QAAQ,GAAG,oBAAoB,GAAG,oBAAoB,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;qBAC/E;iBACJ;;qBAEI;oBACD,QAAQ,GAAG,cAAc,GAAG,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;iBACnE;;gBAGD,IAAI,CAAC,qBAAqB,IAAI,CAAC,QAAQ,EAAE;oBAC/B,IAAA,qEAAU,CAAmD;oBAEnE,QAAQ,GAAG;wBACP,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,MAAM;wBAClB,OAAO,EAAE,IAAIA,iBAAW,CAAC,EAAE,EAAE,UAAU,CAAC;qBAC3C,CAAC;iBACL;;gBAGD,IAAI,QAAQ,EAAE;oBACV,qBAAqB,GAAG,QAAQ,CAAC;iBACpC;gBAED,qBAAqB,CAAC,KAAK,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAChE,qBAAqB,CAAC,QAAQ,GAAG,cAAc,CAAC,iCAAiC,CAAC,qBAAqB,CAAC,CAAC;gBACzG,cAAc,CAAC,2BAA2B,CACtC,OAAO,EAAE,qBAAqB,CACjC,CAAC;gBAEF,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC,OAAO,CAAC;gBAC1D,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC;aACtD;YAED,MAAM,CAAC,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC,iCAAiC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAEzG,IAAI,kBAAkB,EAAE;gBACpB,MAAM,CAAC,cAAc,GAAG;oBACpB,SAAS,EAAE,sBAAsB,CAAC,IAAI;oBACtC,QAAQ,EAAE,MAAM,CAAC,cAAc;iBAClC,CAAC;gBAEF,cAAc,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;aACnF;YAED,OAAO,MAAM,CAAC;SACjB;QAEM,oCAAqB,GAA5B,UAA6B,OAAY;YACrC,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,GAAG,EAAE,EACxG,aAAa,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAErE,UAAU,GAAG,OAAO,UAAU,KAAK,UAAU,GAAG,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC;YAEpG,IAAI,aAAa,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;gBAAE,UAAU,CAAC,IAAI,CAACG,gBAAU,CAAC,QAAQ,CAAC,CAAC;YAEnF,OAAO,EAAE,UAAU,YAAA,EAAE,aAAa,eAAA,EAAE,CAAC;SACxC;QAEc,kDAAmC,GAAlD,UACI,YAAiB,EACjB,GAAW,EACX,WAAwB,EACxB,KAAqB;YAArB,sBAAA,EAAA,aAAqB;YAErB,IAAM,MAAM,GAAG;gBACX,IAAI,OAAO,GAAG,IAAI,CAAC;gBAEnB,IAAI,KAAK,EAAE;;oBAEP,OAAO,GAAG,IAAI,oBAAoB,CAC9B,OAAO,EACPF,4BAAS,CAAC,eAAe,CACrB,IAAI,YAAY,EAAE,CACrB,CACJ,CAAC;iBACL;qBAAM;oBACH,OAAO,GAAG,YAAY,CAAC;iBAC1B;gBAED,IAAI,UAAU,GAAG,IAAI,CAAC;gBAEtB,IACI,MAAM,IAAI,OAAO,CAAC,QAAQ;oBAC1B;wBACI,KAAK;wBACL,QAAQ;wBACR,SAAS;wBACT,QAAQ;wBACR,MAAM;wBACN,EAAE;qBACL,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EACvC;;oBAEE,IAAI,OAAO,GAAG,IAAID,iBAAW,CACzB,OAAO,IAAI,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,EACzD,CAACG,gBAAU,CAAC,QAAQ,CAAC,CACxB,EAAE,cAAc,GAAG,EAAE,CAAC;oBAEvB,cAAc,CAAC,GAAG,CAAC,GAAG;wBAClB,KAAK,EAAE,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC;wBACxC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI;wBAC3B,OAAO,SAAA;qBACV,CAAC;oBAEF,UAAU,GAAG;wBACT,aAAa,EAAE,OAAO;wBACtB,cAAc,gBAAA;qBACjB,CAAC;oBAEF,cAAc,CAAC,2BAA2B,CACtC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,GAAG,CAAC,CACxC,CAAC;iBACL;qBAAM;;oBAEH,UAAU,GAAG,cAAc,CAAC,6BAA6B,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAC5F;gBAED,UAAU,CAAC,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC,iCAAiC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBAEjH,IAAI,aAAa,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,CAAC,QAAQ,KAAK,UAAU,EAAE;oBAChF,OAAO,CAAC,WAAW,CAAC,QAAQ,CACxB,UAAU,CAAC,cAAc,EAAE,cAAc,CAAC,WAAW,CACxD,CAAC;iBACL;gBAED,OAAO;oBACH,aAAa,EACT,UAAU,CAAC,aAAa,YAAYH,iBAAW,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ;wBACxE,UAAU,CAAC,aAAa;;wBAExB,IAAIE,eAAS,CAAC,UAAU,CAAC,aAAa,EAAE,cAAc,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC;oBAC5G,cAAc,EAAE,UAAU,CAAC,cAAc;iBAC5C,CAAC;aACL,CAAC;YAEF,OAAO,MAAM,CAAC;SACjB;QAEc,0BAAW,GAA1B,UAA2B,OAAY,EAAE,GAAW,EAAE,WAAwB;YAC1E,IAAI,kBAAkB,GAAG,IAAIE,eAAS,CAAC,EAAE,EAAE,cAAc,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;YACrG,IAAI,YAAY,GAAG,EAAE,CAAC;YACtB,IAAI,SAAS,GAAG,IAAI,CAAC;YAErB,IAAI,MAAM,GAAG;gBACT,SAAS,EAAE,OAAO;gBAClB,SAAS,EACL,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,SAAS;oBAChD,SAAS;oBACT,MAAM,IAAI,OAAO,CAAC,QAAQ;wBACtB,WAAW,GAAG,QAAQ;gBAElC,OAAO,EAAE,kBAAkB;gBAC3B,QAAQ,EAAE,EAAE;gBACZ,kBAAkB,EAAC,EAAE;gBACrB,SAAS,EAAE,CAAC;gBACZ,GAAG,EAAE,IAAI;gBACT,MAAM,EAAE,IAAI;aACf,CAAC;YAEF,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE;gBAC9D,IAAI,GAAC,GAAG,CAAC,CAAC;gBACV,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,IAAI;oBACxD,YAAY,CAAC,GAAC,CAAC,GAAG,cAAc,CAAC,mCAAmC,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;oBAC5G,MAAM,CAAC,kBAAkB,CAAC,GAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC1C,GAAC,IAAI,CAAC,CAAC;iBACV,CAAC,CAAC;aACN;iBAAM;gBACH,YAAY,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,mCAAmC,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,CAAA;aAClG;YAED,IAAI,GAAG,GAAG;gBACF,IAAI,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;gBAEnD,IAAM,OAAO,GAAc,kBAAkB,CAAC;gBAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;gBAEjD,WAAW,CAAC,cAAc,CAAC,sBAAsB,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAEhG,IAAI,aAAa,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,UAAU,EAAE;oBAC9E,OAAO,CAAC,WAAW,CAAC,MAAM,CACtB,WAAW,CAAC,cAAc,EAAE,cAAc,CAAC,WAAW,CACzD,CAAC;iBACL;aACJ,EACD,MAAM,GAAG,UAAU,CAAS;gBACxB,IAAM,OAAO,GAAc,kBAAkB,CAAC;gBAC9C,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAChC,CAAC;YAEN,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;YACjB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;YAIvB,OAAO,MAAM,CAAC;SACjB;QAEM,gDAAiC,GAAxC,UAAyC,cAAc;YACnD,IAAM,MAAM,GAAG,UAAU,QAAQ;;oBAEzB,IAAI,cAAc,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC;oBAEzF,IAAI,GAAG,IAAI,cAAc,EAAE;wBACvB,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;4BAC1B,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,QAAQ,EAAE;gCAClC,IACI,gBAAgB,IAAI,cAAc,CAAC,GAAG,CAAC,EACzC;oCACE,cAAc,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;iCACrE;gCAED,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ;;gCAEhC,QAAQ,CAAC,GAAG,CAAC,CAChB,CAAC;gCAEF,IACI,eAAe,IAAI,cAAc,CAAC,GAAG,CAAC,EACxC;oCACE,cAAc,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;iCACpE;6BACJ;iCAAM,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,WAAW,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;;;6BAGxE;yBACJ;6BAAM;;4BAEH,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,QAAQ,EAAE;;gCAE5C,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;6BAC/C;iCAAM;;gCAEH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;sDAAW;;;gCAI7B,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oCACpD,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iCACjC;gCAED,IAAI,GAAC,GAAG,CAAC,CAAC;gCAEV,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI;oCAChC,IACI,kCAAkC,IAAI,cAAc,CAAC,GAAG,CAAC,EAC3D;wCACE,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;qCAC9F;oCAED,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;oCAE1B,IAAI,oBAAoB,GAAG,EAAE,CAAC;oCAC9B,oBAAoB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oCAEjC,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAC,CAAC,CAAC,QAAQ,CACpC,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,QAAQ,GAAG,oBAAoB,GAAG,IAAI,CAC3E,CAAC;oCAEF,GAAC,EAAE,CAAC;iCACP,CAAC,CAAC;6BACN;yBACJ;qBACJ;;gBA/DL,KAAK,IAAI,GAAG,IAAI,QAAQ;;iBAgEvB;aACJ,CAAA;YAED,OAAO,MAAM,CAAC;SACjB;QAEM,0CAA2B,GAAlC,UAAmC,WAAW,EAAE,WAAW;YACvD,IAAI,WAAW,CAAC,IAAI,KAAK,SAAS,EAAE;gBAChC,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,GAAG,OAAO,GAAG,UAAU,CAAC;aAC7E;iBAAM,IAAI,WAAW,CAAC,OAAO,EAAE;gBAC5B,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,UAAU,EAAE;oBAC1D,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,IAC9C,WAAW,CAAC,UAAU,IAAI,CAAC;wBACvB,OAAO,GAAG,UAAU,IACxB,QAAQ,CAAC;iBAChB;qBAAM;oBACH,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,GAAG,OAAO,GAAG,UAAU,CAAC;iBAC7E;aACJ;iBAAM;gBACH,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC1C,IAAI,WAAW,CAAC,IAAI,KAAK,QAAQ;oBAAE,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC;aACtE;YAED,cAAc,CAAC,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAC9D;;QAGM,gCAAiB,GAAxB,UAAyB,WAAW,EAAE,WAAW;YAC7C;gBACI,OAAO;gBACP,MAAM;gBACN,cAAc;gBACd,gBAAgB;gBAChB,eAAe;gBACf,kCAAkC;gBAClC,YAAY;gBACZ,eAAe;gBACf,SAAS;gBACT,OAAO;gBACP,MAAM;gBACN,MAAM;gBACN,YAAY;gBACZ,WAAW;gBACX,cAAc;gBACd,UAAU;aACb,CAAC,OAAO,CAAC,UAAU,IAAI;gBACpB,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,WAAW,EAAE;oBAC5D,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBACrD;aACJ,CAAC,CAAC;YAEH,WAAW,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;SACxD;QArXM,0BAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAsXnC,qBAAC;KArYD;;;QCZA;SAeC;QAXG,iCAAS,GAAT,UAAU,MAAc;;YACpB,IAAI,MAAM,GAAG,EAAE,CAAC;;gBAEhB,KAAgB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,gBAAA,4BAAE;oBAAhC,IAAI,GAAG,WAAA;oBACR,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;wBAC5B,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,KAAA,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;qBACxC;iBACJ;;;;;;;;;YAED,OAAO,MAAM,CAAC;SACjB;kFAXQ,aAAa;+EAAb,aAAa;4BAL1B;KAEA,IAeC;wDAZY,aAAa;kBAHzBC,SAAI;mBAAC;oBACF,IAAI,EAAE,eAAe;iBACxB;;;ICwBD,IAAM,kBAAkB,GAAG;QACvB,oBAAoB;QACpB,uBAAuB;QACvB,qBAAqB;QACrB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB;QACxB,aAAa;KAChB,CAAC;;QAEF;SAqCC;0DADY,YAAY;iHAAZ,YAAY,kBAnCZ;oBACLC,iBAAW;oBACXC,yBAAmB;;oBAGnBC,kCAAuB;oBACvBC,kCAAqB;oBACrBC,sBAAe;oBACfC,kCAAqB;oBACrBC,kBAAa;oBACbC,0BAAiB;oBACjBC,8BAAmB;oBACnBC,4BAAkB;oBAClBC,oBAAc;oBACdC,0BAAmB;oBACnBC,oBAAc;oBACdC,sBAAe;iBAClB;gBAGGX,kCAAuB;gBACvBC,kCAAqB;gBACrBC,sBAAe;gBACfC,kCAAqB;gBACrBC,kBAAa;gBACbC,0BAAiB;gBACjBC,8BAAmB;gBACnBC,4BAAkB;gBAClBC,oBAAc;gBACdC,0BAAmB;gBACnBC,oBAAc;gBACdC,sBAAe;2BAtEvB;KAsCA,IAqCC;8FADY,YAAY,mBA7CrB,oBAAoB;YACpB,uBAAuB;YACvB,qBAAqB;YACrB,wBAAwB;YACxB,qBAAqB;YACrB,wBAAwB;YACxB,aAAa,aAKTb,iBAAW;YACXC,yBAAmB;;YAGnBC,kCAAuB;YACvBC,kCAAqB;YACrBC,sBAAe;YACfC,kCAAqB;YACrBC,kBAAa;YACbC,0BAAiB;YACjBC,8BAAmB;YACnBC,4BAAkB;YAClBC,oBAAc;YACdC,0BAAmB;YACnBC,oBAAc;YACdC,sBAAe,aAIfX,kCAAuB;YACvBC,kCAAqB;YACrBC,sBAAe;YACfC,kCAAqB;YACrBC,kBAAa;YACbC,0BAAiB;YACjBC,8BAAmB;YACnBC,4BAAkB;YAClBC,oBAAc;YACdC,0BAAmB;YACnBC,oBAAc;YACdC,sBAAe;YAzCnB,oBAAoB;YACpB,uBAAuB;YACvB,qBAAqB;YACrB,wBAAwB;YACxB,qBAAqB;YACrB,wBAAwB;YACxB,aAAa;wDAuCJ,YAAY;kBApCxBC,aAAQ;mBAAC;oBACN,OAAO,EAAE;wBACLd,iBAAW;wBACXC,yBAAmB;;wBAGnBC,kCAAuB;wBACvBC,kCAAqB;wBACrBC,sBAAe;wBACfC,kCAAqB;wBACrBC,kBAAa;wBACbC,0BAAiB;wBACjBC,8BAAmB;wBACnBC,4BAAkB;wBAClBC,oBAAc;wBACdC,0BAAmB;wBACnBC,oBAAc;wBACdC,sBAAe;qBAClB;oBACD,YAAY,EAAE,kBAAkB;oBAChC,OAAO;wBACHX,kCAAuB;wBACvBC,kCAAqB;wBACrBC,sBAAe;wBACfC,kCAAqB;wBACrBC,kBAAa;wBACbC,0BAAiB;wBACjBC,8BAAmB;wBACnBC,4BAAkB;wBAClBC,oBAAc;wBACdC,0BAAmB;wBACnBC,oBAAc;wBACdC,sBAAe;uBACZ,kBAAkB,CACxB;iBACJ;;6BA5CG,oBAAoB,03EAApB,oBAAoB;QACpB,uBAAuB;QACvB,qBAAqB;QACrB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB,4QACxB,aAAa;6BALb,uBAAuB,03EADvB,oBAAoB;QACpB,uBAAuB;QACvB,qBAAqB;QACrB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB,4QACxB,aAAa;6BAJb,qBAAqB,03EAFrB,oBAAoB;QACpB,uBAAuB;QACvB,qBAAqB;QACrB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB,4QACxB,aAAa;6BAHb,wBAAwB,03EAHxB,oBAAoB;QACpB,uBAAuB;QACvB,qBAAqB;QACrB,wBAAwB;QACxB,qBAAqB;QACrB,wBAAwB,4QACxB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}