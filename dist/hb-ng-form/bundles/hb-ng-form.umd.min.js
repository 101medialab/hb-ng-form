!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("reflect-metadata"),require("@angular/core"),require("rxjs"),require("@angular/forms"),require("@angular/platform-browser/animations"),require("@angular/material/autocomplete"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/datepicker"),require("@angular/material/expansion"),require("@angular/material/input"),require("@angular/material/core"),require("@angular/material/radio"),require("@angular/material/select")):"function"==typeof define&&define.amd?define("hb-ng-form",["exports","reflect-metadata","@angular/core","rxjs","@angular/forms","@angular/platform-browser/animations","@angular/material/autocomplete","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/datepicker","@angular/material/expansion","@angular/material/input","@angular/material/core","@angular/material/radio","@angular/material/select"],n):n((e=e||self)["hb-ng-form"]={},null,e.ng.core,e.rxjs,e.ng.forms,e.ng.platformBrowser.animations,e.ng.material.autocomplete,e.ng.material.button,e.ng.material.buttonToggle,e.ng.material.card,e.ng.material.checkbox,e.ng.material.datepicker,e.ng.material.expansion,e.ng.material.input,e.ng.material.core,e.ng.material.radio,e.ng.material.select)}(this,(function(e,n,t,a,o,r,i,l,c,d,p,u,s,f,m,g,y){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var h=function(e,n){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)};function b(e,n){function t(){this.constructor=e}h(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}function v(e,n,t,a){var o,r=arguments.length,i=r<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(i=(r<3?o(i):r>3?o(n,t,i):o(n,t))||i);return r>3&&i&&Object.defineProperty(n,t,i),i}function C(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)}function x(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],a=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")}function k(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var a,o,r=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(a=r.next()).done;)i.push(a.value)}catch(e){o={error:e}}finally{try{a&&!a.done&&(t=r.return)&&t.call(r)}finally{if(o)throw o.error}}return i}function T(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(k(arguments[n]));return e}var O=function(){function e(e){this.resolver=e}var n;return n=e,e.prototype.ngAfterViewInit=function(){if(!this.data.hide&&this.data.useComponent){var e=this.resolver.resolveComponentFactory(this.data.useComponent),n=this.customBlock.createComponent(e);n.instance.templateObject=this.data,n.instance.parentTemplateObject=this.parent,n.changeDetectorRef.detectChanges()}},e.prototype.ngOnInit=function(){var e=this.data,n=null,t=null,o=e.options;"function"==typeof o?t=o(e.diContainer,this.data,this.parent):n instanceof a.Observable||(t=o),n=t,t instanceof a.Observable||(n=new a.Observable((function(e){e.next(t),e.complete()}))),this.resolvedOptions=n},e.prototype.stringToBoolean=function(e){return"true"===e},e.prototype.updateParentValue=function(e,n){var t=e.target?e.target:e.source,a=t.checked;switch(this.data.renderType){case"checkbox":var o=this.parent.control.controls;if(a)this.parent.add(),o[o.length-1].setValue(n.value);else{for(var r=0;r<o.length&&o[r].value!=n.value;r++);this.parent.remove(r)}break;case"radio":a&&this.data.control.patchValue(t.value)}},e.prototype.typeof=function(e){return typeof e},e.prototype.slugifyString=function(e){return e in n.slugMap?n.slugMap[e]:n.slugMap[e]=e.toLowerCase().replace(/[^\w\s-]/g,"").replace(/[\s_-]+/g,"-").replace(/^-+|-+$/g,"")},e.slugMap=[],e.ctorParameters=function(){return[{type:t.ComponentFactoryResolver}]},v([t.ViewChild("customBlock",{read:t.ViewContainerRef,static:!0}),C("design:type",Object)],e.prototype,"customBlock",void 0),e=n=v([t.Component({selector:"hb-form-widget",template:'<div *ngIf="\n        data.control != undefined &&\n        (\n            data.groupType == undefined ||\n            parent.arrayType == \'enum\'\n        ) &&\n        key != \'setValue\' &&\n        (\n            data.hide == undefined ||\n            !data.hide\n        )\n    "\n    [ngClass]="{\n        \'error\': !data.control.valid,\n        \'hb-form-with-hints\' : data.hints\n    }"\n    class="expand-to-child hb-form-widget hb-form-widget_{{ key }} {{ data?.html?.classAttr }}"\n>\n    <ng-container *ngIf="!data.useComponent; else customBlock">\n        <label *ngIf="data.label" for="hb-form-widget_{{ key ? key : data.slug }}-input">{{ data.label }}</label>\n\n        <ng-container *ngIf="parent?.arrayType === \'enum\'">\n            <ng-container *ngIf="[\'select\', \'radio\', \'checkbox\', \'textarea\'].indexOf(data.renderType) === -1">\n                <ng-container *ngIf="data.selectOptionsObservables == undefined; else autocompleteBlock"\n                     class="hb-form-widget-input-field">\n                    <input [attr.id]="(key ? key : data.slug) + \'-input\'"\n                           [type]="data.renderType ? data.renderType : \'text\'"\n                           (change)="data.control.patchValue($event.target.value)"\n                           [placeholder]="data.label !== undefined ? data.label : null"\n                           [formControl]="data.control" />\n                </ng-container>\n\n                <ng-template #autocompleteBlock [ngIf]="data.autocomplete != undefined">\n\x3c!--                        Autocomplete is not well supported in hb-form-widget--\x3e\n\n\x3c!--                        <div *ngIf="data.autocomplete.renderType != \'custom\'; else autocompleteCustomizeBlock" --\x3e\n\x3c!--                             class="hb-form-widget-input-field autocomplete">--\x3e\n\x3c!--                            <input [attr.id]="key ? key : data.slug + \'-input\'"--\x3e\n\x3c!--                                   [type]="data.renderType ? data.renderType : \'text\'"--\x3e\n\x3c!--                                   (change)="data.control.patchValue($event.target.value)"--\x3e\n\x3c!--                                   [placeholder]="data.label !== undefined ? data.label : data.option.name"--\x3e\n\x3c!--                                   [formControl]="data.control" />--\x3e\n\n\x3c!--                            <autocomplete #auto="matAutocomplete">--\x3e\n\x3c!--                                <option *ngFor="let option of data.selectOptionsObservables | async" [value]="option.value">--\x3e\n\x3c!--                                    <span>{{ option.label }}</span>--\x3e\n\x3c!--                                </option>--\x3e\n\x3c!--                            </autocomplete>--\x3e\n\n\x3c!--                            <span class="hints" *ngIf="data?.hints">--\x3e\n\x3c!--                                {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}--\x3e\n\x3c!--                            </span>--\x3e\n\x3c!--                        </div>--\x3e\n                </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf="data.renderType == \'textarea\'">\n                <textarea rows="5" [formControl]="data.control"\n                          [attr.id]="key ? key : data.slug + \'-input\'">\n                </textarea>\n            </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf="[\'radio\', \'checkbox\', \'select\'].indexOf(data.renderType) > -1">\n            <ng-container *ngIf="data.renderType != \'select\'; else selectBlock">\n                <ng-container *ngFor="let option of resolvedOptions | async">\n                    <label for="hb-form-widget_{{ key ? key : data.slug }}-input__{{ slugifyString(option.name) }}">{{ option.name }}</label>\n\n                    <ng-container *ngIf="data.renderType == \'radio\'; else checkBoxBlock">\n                        <input type="radio"\n                               id="hb-form-widget_{{ key ? key : data.slug }}-input__option.name"\n                               class="example-radio-button"\n                               [value]="option.value"\n                               [checked]="data.control.value === option.value || option.id === data.control.value ? true : null"\n                               [attr.name]="data.renderType == \'radio\' ? (key ? key : data.slug) + \'-input\' : null"\n                               (change)="updateParentValue($event, option)"\n                               [formControl]="data.control"\n                        />\n                    </ng-container>\n\n                    <ng-template #checkBoxBlock>\n                        <ng-container *ngIf="parent?.arrayType == \'enum\'; else booleanCheckBoxBlock">\n                            <input type="checkbox"\n                                   [value]="option.value"\n                                   [checked]="data.control.value === option.value || option.id === data.control.value ? true : null"\n                                   (change)="updateParentValue($event, option)"\n                                   [formControl]="data.control"/>\n                        </ng-container>\n\n                        <ng-template #booleanCheckBoxBlock>\n                            <input type="checkbox"\n                                   [checked]="data.control.value ? true : null"\n                                   (change)="data.control.patchValue($event.source.checked)"/>\n                        </ng-template>\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n\n            <ng-template #selectBlock>\n                <select *ngIf="data.renderType == \'select\'"\n                        [formControl]="data.control"\n                        [attr.placeholder]="data.label != undefined ? data.label : null"\n                >\n                    <option *ngFor="let option of resolvedOptions | async" [value]="option.value">\n                        {{ option.name ? option.name : option.value }}\n                    </option>\n                </select>\n            </ng-template>\n        </ng-container>\n\n        <span class="hints" *ngIf="data?.hints">\n            {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}\n        </span>\n    </ng-container>\n\n    <ng-template #customBlock></ng-template>\n</div>\n',inputs:["data","key","parent"]}),C("design:paramtypes",[t.ComponentFactoryResolver])],e)}(),F=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return b(n,e),n=v([t.Component({selector:"hb-form-array",template:'<div [attr.id]="data.id"\n     class="hb-form-array {{ data.arrayType }} hb-form-array_{{ key }} {{ data?.html?.classAttr }}"\n     *ngIf="\n         data.control != undefined &&\n         key != \'setValue\' && (\n             data.hide == undefined ||\n             !data.hide\n         )\n     "\n     [formGroup]="data.control"\n     [ngClass]="{\n         \'hb-form-with-hints\' : data.hints\n     }"\n>\n    <header>\n        <h2 *ngIf="!data.hideHeader">{{ data.label }}</h2>\n\n        <ng-container *ngIf="data.childrenConfigName.length > 0">\n            <ng-container *ngIf="!data.expandOptions; else expandedArrayPushOptions">\n                <select class="hb-form-array-config-switch"\n                        [(ngModel)]="data.useConfig" [ngModelOptions]="{standalone: true}">\n                    <option *ngFor="let configName of data.childrenConfigName; let i = index" [value]="i">\n                        {{ configName }}\n                    </option>\n                </select>\n\n                <button class="btn btn-default hb-form-add-btn" type="button" *ngIf="data.arrayType != \'enum\'" (click)="data.add()">Add</button>\n            </ng-container>\n\n            <ng-template #expandedArrayPushOptions>\n                <button type="button"\n                        class="btn btn-default hb-form-add-btn hb-form-add-btn-expanded-{{ i }}"\n                        *ngFor="let configName of data.childrenConfigName; let i = index"\n                        (click)="data.useConfig = i; data.add();">\n                    &#x253C; {{ configName }}\n                </button>\n            </ng-template>\n        </ng-container>\n    </header>\n\n    <div [attr.id]="data.id ? (data.id + \'_\' + i) : null"\n         class="hb-form-array-cell hb-form-array-cell_{{ cell?.flexibleObjectTypeName?.toLowerCase() }} {{ cell?.html?.classAttr }}"\n         *ngFor="let cell of (data.arrayType != \'enum\' ? data.children : resolvedOptions | async); let i=index">\n        <hb-form-widget *ngIf="data.arrayType == \'enum\'"\n                        [data]="cell"\n                        [key]="i"\n                        [parent]="data"></hb-form-widget>\n\n        <ng-container *ngIf="data.arrayType != \'enum\'">\n            <div *ngFor="let each of cell.children | mapToIterable;"\n                 class="panel panel-default hb-form-array-cell-attr_{{ each.key }}">\n                <ng-container *ngIf="!each.hide && each.key != \'setValue\'">\n                    <hb-form-widget *ngIf="each.val.groupType == undefined"\n                                    [data]="each.val"\n                                    [key]="i"\n                                    [parent]="data"></hb-form-widget>\n                    <hb-form-array *ngIf="each.val?.groupType == \'array\'"\n                                   [data]="each.val"\n                                   [key]="each.key"\n                                   [parent]="data"></hb-form-array>\n                    <hb-form-object *ngIf="each.val?.groupType == \'object\'"\n                                    [data]="each.val"\n                                    [key]="each.key"\n                                    [parent]="data"></hb-form-object>\n                </ng-container>\n            </div>\n        </ng-container>\n\n        <button class="btn btn-default hb-form-remove-btn"\n                type="button"\n                *ngIf="data.arrayType != \'enum\'"\n                (click)="data.remove(i)">\n            &#x2715;\n        </button>\n    </div>\n\n    <div class="hints" *ngIf="data?.hints">\n        {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer) : data.hints }}\n    </div>\n</div>\n',inputs:["key","data","parent"]})],n)}(O),I=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return b(n,e),n=v([t.Component({selector:"hb-mat-form-array",template:'<mat-card class="hb-form-array hb-array-type_{{ data.arrayType }} hb-form-array_{{ key }} {{ data?.html?.classAttr }}"\n          [attr.id]="data.id"\n          *ngIf="\n              data.control != undefined &&\n              key != \'setValue\' && (\n                  data.hide == undefined ||\n                  !data.hide\n              )\n          "\n          [formGroup]="data.control"\n          [ngClass]="{\n              \'hb-form-with-hints\' : data.hints\n          }">\n    <mat-card-header>\n        <mat-card-title *ngIf="!data.hideHeader">\n            <h2 *ngIf="data.label != \'\'">{{ data.label }}</h2>\n\n            <ng-container *ngIf="data.childrenConfigName.length > 0">\n                <ng-container *ngIf="!data.expandOptions; else expandedArrayPushOptions">\n                    <mat-form-field>\n                        <mat-select class="hb-form-array-config-switch"\n                                    [(ngModel)]="data.useConfig"\n                                    [ngModelOptions]="{standalone: true}">\n                            <mat-option *ngFor="let configName of data.childrenConfigName; let i = index" [value]="i">\n                                {{ configName }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <button mat-raised-button\n                            type="button"\n                            class="btn btn-default hb-form-add-btn"\n                            *ngIf="data.arrayType != \'enum\'"\n                            (click)="data.add()"\n                    >\n                        Add\n                    </button>\n                </ng-container>\n\n                <ng-template #expandedArrayPushOptions>\n                    <button mat-raised-button\n                            type="button"\n                            *ngFor="let configName of data.childrenConfigName; let i = index"\n                            (click)="data.useConfig = i; data.add();">\n                        &#x253C; {{ configName }}\n                    </button>\n                </ng-template>\n            </ng-container>\n        </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <div [attr.id]="data.id + \'-\' + i"\n             class="hb-form-array-cell hb-form-array-cell_{{ cell?.flexibleObjectTypeName?.toLowerCase() }} {{ cell?.html?.classAttr }}"\n             *ngFor="\n                 let cell of data.arrayType != \'enum\' ?\n                     data.children : resolvedOptions | async\n                 ; let i=index\n             ">\n            <hb-mat-form-widget *ngIf="data.arrayType == \'enum\'" [data]="cell" [key]="i" [parent]="data"></hb-mat-form-widget>\n\n            <ng-container *ngIf="data.arrayType != \'enum\'">\n                <div *ngFor="let each of cell.children | mapToIterable;"\n                     class="hb-form-array-cell-attr_{{ each.key }}">\n                    <ng-container *ngIf="!each.hide && each.key != \'setValue\'">\n                        <hb-mat-form-widget *ngIf="each.val.groupType == undefined" [data]="each.val" [key]="i" [parent]="data">\n                        </hb-mat-form-widget>\n                        <hb-mat-form-array *ngIf="each.val?.groupType == \'array\'" [data]="each.val" [key]="each.key" [parent]="data">\n                        </hb-mat-form-array>\n                        <hb-mat-form-object *ngIf="each.val?.groupType == \'object\'" [data]="each.val" [key]="each.key" [parent]="data">\n                        </hb-mat-form-object>\n                    </ng-container>\n                </div>\n            </ng-container>\n\n            <button mat-mini-fab color="primary" class="hb-form-remove-btn" type="button"\n                    *ngIf="data.arrayType != \'enum\'"\n                    (click)="data.remove(i)">\n                &#x2715;\n            </button>\n        </div>\n\n        <strong class="mat-hint" *ngIf="data?.hints">\n            {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer) : data.hints }}\n        </strong>\n    </mat-card-content>\n</mat-card>\n',inputs:["key","data","parent"]})],n)}(F),j=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return b(n,e),n=v([t.Component({selector:"hb-form-object",template:'<div *ngIf="\n        data.control != undefined &&\n        key != \'setValue\' && (\n            data.hide == undefined ||\n            !data.hide\n        )\n    "\n     [formGroup]="data.control"\n     [ngClass]="{\n         \'error\': !data.control.valid,\n         \'hb-form-with-hints\' : data.hints\n     }"\n     class="form-object {{ data?.html?.classAttr }} hb-form-obj_{{ key }}"\n>\n    <h2 *ngIf="typeof(data.label) == \'string\' && data.label != \'\' && !data.hideHeader">\n        {{ data.label }}\n    </h2>\n\n    <div class="hb-form-object-content">\n        <div *ngFor="let each of data.children | mapToIterable" class="hb-form-obj-attr_{{ each.key }}">\n            <ng-container *ngIf="!each.hide && each.key != \'setValue\'">\n                <hb-form-widget\n                    *ngIf="each.val.groupType == undefined && each.key != \'setValue\'"\n                    [data]="each.val"\n                    [key]="each.key"\n                    [parent]="data"\n                ></hb-form-widget>\n                <hb-form-array\n                    *ngIf="each.val?.groupType == \'array\'"\n                    [data]="each.val"\n                    [key]="each.key"\n                    [formArrayName]="each.key"\n                    [parent]="data"\n                ></hb-form-array>\n                <hb-form-object\n                    *ngIf="each.val?.groupType == \'object\' && each.key != \'setValue\'"\n                    [data]="each.val"\n                    [key]="each.key"\n                    [parent]="data"\n                ></hb-form-object>\n            </ng-container>\n        </div>\n\n        <span class="hints" *ngIf="data?.hints">\n            {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer) : data.hints }}\n        </span>\n    </div>\n</div>\n',inputs:["id","key","data","parent"]})],n)}(O),M=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return b(n,e),n=v([t.Component({selector:"hb-mat-form-object",template:'<mat-card *ngIf="\n    data.control != undefined &&\n    key != \'setValue\' && (\n        data.hide == undefined ||\n        !data.hide\n    )"\n          [formGroup]="data.control"\n          [ngClass]="{\n        \'error\': !data.control.valid,\n        \'hb-form-with-hints\' : data.hints\n    }"\n          class="form-object {{ data?.html?.classAttr }} hb-form-obj_{{ key }}">\n    <mat-card-header *ngIf="typeof(data.label) == \'string\' && data.label != \'\' && !data.hideHeader">\n        <mat-card-title>\n            {{ data.label }}\n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content class="hb-form-object-content">\n        <div *ngFor="let each of data.children | mapToIterable" class="hb-form-obj-attr_{{ each.key }}">\n            <ng-container *ngIf="!each.hide && each.key != \'setValue\'">\n                <hb-mat-form-widget\n                        *ngIf="each.val.groupType == undefined && each.key != \'setValue\'"\n                        [data]="each.val"\n                        [key]="each.key"\n                        [parent]="data">\n                </hb-mat-form-widget>\n                <hb-mat-form-array\n                        *ngIf="each.val?.groupType == \'array\'"\n                        [data]="each.val"\n                        [key]="each.key"\n                        [formArrayName]="each.key"\n                        [parent]="data">\n                </hb-mat-form-array>\n                <hb-mat-form-object\n                        *ngIf="each.val?.groupType == \'object\' && each.key != \'setValue\'"\n                        [data]="each.val"\n                        [key]="each.key"\n                        [parent]="data">\n                </hb-mat-form-object>\n            </ng-container>\n        </div>\n        <strong class="mat-hint" *ngIf="data?.hints">\n            {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer) : data.hints }}\n        </strong>\n    </mat-card-content>\n</mat-card>\n',inputs:["id","key","data","parent"]})],n)}(j),w=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return b(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),"enum"==this.parent.arrayType&&this.parent.control.value.indexOf(this.data.options[0].value)>-1&&this.data.control.setValue(this.data.options[0].value)},n=v([t.Component({selector:"hb-mat-form-widget",template:'<div *ngIf="\n         data.control != undefined &&\n         (\n             data.groupType == undefined ||\n             parent.arrayType == \'enum\'\n         ) &&\n         key != \'setValue\' &&\n         (\n             data.hide == undefined ||\n             !data.hide\n         )\n     "\n     [ngClass]="{\n         \'error\': !data.control.valid,\n         \'hb-form-with-hints\' : data.hints\n     }"\n     class="expand-to-child hb-form-widget hb-form-widget_{{ key }} {{ data?.html?.classAttr }}"\n>\n    <ng-template #customBlock></ng-template>\n\n    <ng-container *ngIf="\n        !data.useComponent &&\n        parent?.arrayType !== \'enum\'\n    ">\n        <ng-container *ngIf="[\'select\', \'radio\', \'checkbox\', \'textarea\'].indexOf(data.renderType) === -1">\n            <mat-form-field *ngIf="data.selectOptionsObservables == undefined; else autocompleteBlock" class="hb-form-widget-input-field">\n                <div class="form-field-prefix"\n                     matPrefix\n                     *ngIf="data?.matExtra?.matPrefix"\n                     [innerHtml]="data.matExtra.matPrefix"\n                ></div>\n\n                <input matInput\n                       [attr.id]="(key ? key : data.slug) + \'-input\'"\n                       [type]="data.renderType ? data.renderType : \'text\'"\n                       (change)="data.control.patchValue($event.target.value)"\n                       [placeholder]="data.label !== undefined ? data.label : null"\n                       [formControl]="data.control" />\n\n                <mat-hint align="start" *ngIf="data?.hints">\n                    <strong>\n                        {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                    </strong>\n                </mat-hint>\n\n                <div class="form-field-suffix"\n                     matSuffix\n                     *ngIf="data?.matExtra?.matSuffix"\n                     [innerHtml]="data.matExtra.matSuffix"></div>\n            </mat-form-field>\n\n            <ng-template #autocompleteBlock [ngIf]="data.autocomplete != undefined">\n                <mat-form-field *ngIf="data.autocomplete.renderType != \'custom\';">\n\x3c!--                  else autocompleteCustomizeBlock--\x3e\n                    <input matInput\n                           [attr.id]="key ? key : data.slug + \'-input\'"\n                           [type]="data.renderType ? data.renderType : \'text\'"\n                           (change)="data.control.patchValue($event.target.value);"\n                           placeholder="{{ data.label !== undefined ? data.label : data.option.name }}"\n                           [formControl]="data.control"\n                           [matAutocomplete]="auto" />\n\n                    <mat-autocomplete #auto="matAutocomplete">\n                        <mat-option *ngFor="let option of data.selectOptionsObservables | async" [value]="option.value">\n                            <span>{{ option.label }}</span>\n                        </mat-option>\n                    </mat-autocomplete>\n\n                    <mat-hint align="start" *ngIf="data?.hints">\n                        <strong>\n                            {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                        </strong>\n                    </mat-hint>\n                </mat-form-field>\n            </ng-template>\n        </ng-container>\n\n        <mat-form-field *ngIf="data.renderType === \'textarea\'">\n            <textarea matInput rows="5" [formControl]="data.control"\n                      [placeholder]="data.label ? data.label : data.option.name"\n                      [attr.id]="key ? key : data.slug + \'-input\'">\n            </textarea>\n\n            <mat-hint align="start" *ngIf="data?.hints">\n                <strong>\n                    {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                </strong>\n            </mat-hint>\n        </mat-form-field>\n    </ng-container>\n\n    <ng-container *ngIf="!data.useComponent && [\'radio\', \'checkbox\', \'select\'].indexOf(data.renderType) > -1">\n        <div *ngIf="data.renderType != \'select\'; else selectBlock">\n            <mat-radio-group *ngIf="data.renderType == \'radio\'; else checkBoxBlock" [formControl]="data.control">\n                <mat-radio-button\n                    class="example-radio-button"\n                    *ngFor="let option of data.options"\n                    [value]="option.value"\n                    [checked]="data.control.value === option.value || option.id === data.control.value ? true : null"\n                    [attr.name]="data.renderType == \'radio\' ? (key ? key : data.slug) + \'-input\' : null"\n                    (change)="updateParentValue($event, option)"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n\n            <ng-template #checkBoxBlock>\n                <ng-container *ngIf="parent?.arrayType == \'enum\'; else booleanCheckbox">\n                    <mat-checkbox\n                        *ngFor="let option of data.options"\n                        [value]="option.value"\n                        [checked]="data.control.value === option.value || option.id === data.control.value ? true : null"\n                        (change)="updateParentValue($event, option)"\n                        [formControl]="data.control"\n                    >\n                        {{ option.name }}\n                    </mat-checkbox>\n                </ng-container>\n\n                <ng-template #booleanCheckbox>\n                    <label>{{ data.label }}</label>\n                    <mat-checkbox [checked]="data.control.value ? true : null"\n                                  (change)="data.control.patchValue($event.source.checked)">\n                    </mat-checkbox>\n                </ng-template>\n            </ng-template>\n        </div>\n\n        <ng-template #selectBlock>\n            <mat-form-field>\n                <mat-select\n                    *ngIf="data.renderType == \'select\'"\n                    [formControl]="data.control"\n                    [placeholder]="data.label != undefined ? data.label : null"\n                >\n                    <mat-option *ngFor="let option of resolvedOptions | async" [value]="option.value">\n                        {{ option.name ? option.name : option.value }}\n                    </mat-option>\n                </mat-select>\n\n                <mat-hint align="start" *ngIf="data?.hints">\n                    <strong>\n                        {{ typeof(data.hints) == \'function\' ? data.hints(data.diContainer, data, parent) : data.hints }}\n                    </strong>\n                </mat-hint>\n            </mat-form-field>\n        </ng-template>\n    </ng-container>\n</div>\n',inputs:["data","key","parent"]})],n)}(O),A=function(){function e(e){this._type=e}return Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!0,configurable:!0}),e}(),_=function(e){function n(n){var t=e.call(this,["string","number","boolean"].indexOf(typeof n)>-1?typeof n:"any")||this;return t._value=n,t}return b(n,e),Object.defineProperty(n.prototype,"value",{get:function(){return this._value},enumerable:!0,configurable:!0}),n}(A),V=function(e){function n(n,t,a){void 0===t&&(t=null),void 0===a&&(a=null);var o=e.call(this,n)||this;return o._mapping=t,o._value=a,o}return b(n,e),Object.defineProperty(n.prototype,"mapping",{get:function(){return this._mapping},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"value",{get:function(){return this._value},enumerable:!0,configurable:!0}),n}(A);function S(e){return Reflect.metadata("OnOATResolved",e)}var B=function(){function e(){}return e.generateMapping=function(e,n){void 0===n&&(n={}),n=Object.assign({keyNamingStrategy:"camelCase",stripUnderscore:!1},n);var t={},a=null;if(e instanceof Array)t=new V("array",R.generateMapping(e[0],n));else for(var o in e)if("function"!=typeof e[o]){var r={};"object"==typeof e[o]?r=R.generateObjectTypeMapping(e,o,n):"function"!=typeof e[o]&&(r=new _(e[o])),Reflect.hasMetadata("OnOATResolved",e,o)?Reflect.getMetadata("OnOATResolved",e,o)(e,o,r):"function"==typeof n.onResolved&&n.onResolved(e,o,r),t[R.resolveAttributeKey(n,o,e)]=r}return a="object"==typeof e?e instanceof Date||e instanceof Array?t:new V("object",t):{mapping:t},Reflect.hasMetadata("OnOATResolved",e.constructor)?Reflect.getMetadata("OnOATResolved",e.constructor)(e.constructor,null,a):"function"==typeof n.onResolved&&n.onResolved(e,null,a),a},e.generateObjectTypeMapping=function(e,n,t){var a=null;if(null===e[n])a=new _(null);else if(e[n]instanceof Array){var o=e[n];a="object"!=typeof o[0]?new V("array",new _(o[0])):R.generateMapping(o,t)}else a=e[n]instanceof Date?new V("date",null,e[n]):R.generateMapping(e[n],t);return a},e.resolveAttributeKey=function(e,n,t){var a=n;if(e.stripUnderscore&&"_"===n.charAt(0)){var o=n.substr(1,n.length);o in t&&(a=o)}return"snake_case"===e.keyNamingStrategy&&(a=R.convertStringToSnakeCase(a)),a},e.fixNamingConvention=function(e,n){var t=null;if(n=Object.assign({keyNamingStrategy:"camelCase",stripUnderscore:!1},n),e instanceof Array)t=[],e.forEach((function(e){t.push(R.fixNamingConvention(e,n))}));else if("object"==typeof e)for(var a in t={},e)if(!n.stripUnderscore||"_"!==a.charAt(0)){var o=a;"snake_case"===n.keyNamingStrategy&&(o=R.convertStringToSnakeCase(a)),"object"==typeof e[a]?t[o]=R.fixNamingConvention(e[a],n):t[o]=e[a]}return t},e.convertDataToString=function(e,n){void 0===n&&(n={});var t=null;if(e instanceof Array)t=[],e.forEach((function(e){t.push(R.convertDataToString(e))}));else if("object"==typeof e)for(var a in t={},e)"object"==typeof e[a]?e[a]instanceof Date?t[a]="date"in n&&n.date instanceof Function?n.date(e[a]):e[a].yyyymmdd("-"):t[a]=R.convertDataToString(e[a]):"function"!=typeof e[a]&&(t[a]=e[a]);return t},e.convertStringToSnakeCase=function(e){return e.replace(/([A-Z]+)/g,"_$1").toLowerCase()},e}(),R=B,N=Symbol("FormConfig");var P=Symbol("IArrayOptionsFormConfig");var E=Symbol("IObjectOptionsFormConfig");var q=Symbol("IAutocompleteOptions");var D=Symbol("IChoiceOptionsFormConfig");var H=function(e){this.label="",this.control=new o.FormControl,this.renderType="checkbox",this.options=[],this.options.push(e)},$=Symbol("IMultipleChoicesOptionsFormConfig");var G=Symbol("IFlexibleObjectArrayFormConfig");var L=Symbol("IMatExtraOptionsFormConfig");function U(e,n,t){t.formFactory||(t.formFactory={},[N,P,E,D,$,G,q,L].forEach((function(a){var o=[a,e];n&&o.push(n),Reflect.hasMetadata.apply(Reflect,o)&&(t.formFactory=Object.assign({},t.formFactory,Reflect.getMetadata.apply(Reflect,o)))})))}var W=function(){function e(){}return e.generateFormGroupByObject=function(n,t,a,o){return void 0===a&&(a=null),void 0===o&&(o={}),e.generateFormGroupByOATMapping(n,B.generateMapping(t,o),a)},e.generateLabel=function(e){var n=e.replace(/([A-Z]+)/g," $1").replace(/_/g," ");return n.charAt(0).toUpperCase()+n.slice(1)},e.generateFormGroupByOATMapping=function(n,t,a,r){void 0===a&&(a=null),void 0===r&&(r=null);var i={ngFormControl:{},templateConfig:{}},l=["array","object"].indexOf(t._type)>-1,c=l?t._mapping:t;for(var d in c)if(!(["id"].indexOf(d)>-1)){var p=null,u=null,s=c[d];if(["object","array"].indexOf(s._type)>-1)if("array"===s._type)p=e.handleArray(s,d,n);else{var f=e.prepareAndCreateChildTemplateConfig(s,d,n)();p={groupType:"object",control:f.ngFormControl instanceof o.FormGroup?f.ngFormControl:new o.FormGroup(f.ngFormControl,e.resolveFormValidators(f).validators),children:f.templateConfig}}else if("any"!==s._type)if("undefined"!==s&&void 0!==s._type){var m=e.resolveFormValidators(s),g=m.validators,y=m.valueNotEmpty;u={type:s._type,control:new o.FormControl(y?s._value:"",g)}}else p=r?r(s,d):null;else p=a?a(s,d):null;if(!u&&!p){g=e.resolveFormValidators(s).validators;p={type:"string",renderType:"text",control:new o.FormControl("",g)}}p&&(u=p),u.label=e.generateLabel(d),u.setValue=e.factorySetValueFunctionToTemplate(u),e.resolveTemplateConfigByType(s,u),i.ngFormControl[d]=u.control,i.templateConfig[d]=u}return i.templateConfig.setValue=e.factorySetValueFunctionToTemplate(i.templateConfig),l&&(i.templateConfig={groupType:t.type,children:i.templateConfig},e.setTemplatePreset(t,i.templateConfig)),i},e.resolveFormValidators=function(n){var t=n.formFactory&&n.formFactory.validators?n.formFactory.validators:[],a=-1===[void 0,null].indexOf(n._value);return t="function"==typeof t?t(e.diContainer):t,a&&0===t.length&&t.push(o.Validators.required),{validators:t,valueNotEmpty:a}},e.prepareAndCreateChildTemplateConfig=function(n,t,a,r){void 0===r&&(r=!1);return function(){var i=null,l=null;if("type"in(i=r?new V("array",B.generateMapping(new n)):n)._mapping&&["any","string","boolean","number","date",""].indexOf(i._mapping.type)>-1){var c=new o.FormControl("value"in i._mapping?i._mapping.value:"",[o.Validators.required]),d={};d[t]={label:e.generateLabel(t),type:i._mapping.type,control:c},l={ngFormControl:c,templateConfig:d},e.resolveTemplateConfigByType(i._mapping,d[t])}else l=e.generateFormGroupByOATMapping(a,i._mapping);return l.templateConfig.setValue=e.factorySetValueFunctionToTemplate(l.templateConfig),"formFactory"in i&&"function"==typeof i.formFactory.onCreate&&i.formFactory.onCreate(l.templateConfig,e.diContainer),{ngFormControl:l.ngFormControl instanceof o.FormControl||"object"===i.type?l.ngFormControl:new o.FormGroup(l.ngFormControl,e.resolveFormValidators(l).validators),templateConfig:l.templateConfig}}},e.handleArray=function(n,t,a){var r=new o.FormArray([],e.resolveFormValidators(n).validators),i=[],l={groupType:"array",arrayType:n.formFactory&&n.formFactory.arrayType?null:"type"in n._mapping?"primitive":"object",control:r,children:[],childrenConfigName:[],useConfig:0,add:null,remove:null};if(n.formFactory&&n.formFactory.objectDefinitions){var c=0;n.formFactory.objectDefinitions.forEach((function(n){i[c]=e.prepareAndCreateChildTemplateConfig(n.structure,"",a,!0),l.childrenConfigName[c]=n.label,c+=1}))}else i[0]=e.prepareAndCreateChildTemplateConfig(n,t,a);return l.add=function(){var t=i[l.useConfig]();r.push(t.ngFormControl),l.children.push(t.templateConfig),t.templateConfig.flexibleObjectTypeName=l.childrenConfigName[l.useConfig],"formFactory"in n&&"function"==typeof n.formFactory.onPush&&n.formFactory.onPush(t.templateConfig,e.diContainer)},l.remove=function(e){r.removeAt(e),l.children.splice(e,1)},l},e.factorySetValueFunctionToTemplate=function(e){return function(n){var t=function(){var t=e.groupType?e.children:e;if(a in t)if(t[a].type)"object"!=typeof n[a]?("beforeSetValue"in t[a]&&t[a].beforeSetValue(t[a],n),t[a].control.setValue(n[a]),"afterSetValue"in t[a]&&t[a].afterSetValue(t[a],n)):void 0!==n[a]||n[a];else if("object"===t[a].groupType)t[a].setValue(n[a]);else{if(!n[a])return"continue";for(;t[a].control.controls.length>0;)t[a].remove(0);var o=0;n[a].forEach((function(e){"resolveFlexibleObjectArrayConfig"in t[a]&&(t[a].useConfig=t[a].resolveFlexibleObjectArrayConfig(e)),t[a].add();var n={};n[a]=e,t[a].children[o].setValue("object"!==t[a].arrayType?n:e),o++}))}};for(var a in n)t()}},e.resolveTemplateConfigByType=function(n,t){"boolean"===n.type?t.renderType=n.expandOptions?"radio":"checkbox":n.options?n.options.length>2&&n.maxChoices?t.renderType=n.expandOptions?1==n.maxChoices?"radio":"checkbox":"select":t.renderType=n.expandOptions?"radio":"checkbox":(t.renderType=n.type,"string"===t.type&&(t.renderType="text")),e.setTemplatePreset(n,t)},e.setTemplatePreset=function(n,t){["label","type","useComponent","beforeSetValue","afterSetValue","resolveFlexibleObjectArrayConfig","maxChoices","expandOptions","options","hints","hide","html","renderType","arrayType","autocomplete","matExtra"].forEach((function(e){n.formFactory&&e in n.formFactory&&(t[e]=n.formFactory[e])})),t.diContainer=e.diContainer},e.diContainer=new Map,e}(),z=function(){function e(){}return e.prototype.transform=function(e){var n,t,a=[];try{for(var o=x(Object.keys(e)),r=o.next();!r.done;r=o.next()){var i=r.value;e.hasOwnProperty(i)&&a.push({key:i,val:e[i]})}}catch(e){n={error:e}}finally{try{r&&!r.done&&(t=o.return)&&t.call(o)}finally{if(n)throw n.error}}return a},e=v([t.Pipe({name:"mapToIterable"})],e)}(),K=[F,I,j,M,O,w,z],Z=function(){function e(){}return e=v([t.NgModule({imports:[o.FormsModule,o.ReactiveFormsModule,r.BrowserAnimationsModule,i.MatAutocompleteModule,l.MatButtonModule,c.MatButtonToggleModule,d.MatCardModule,p.MatCheckboxModule,u.MatDatepickerModule,s.MatExpansionModule,f.MatInputModule,m.MatNativeDateModule,g.MatRadioModule,y.MatSelectModule],declarations:K,exports:T([r.BrowserAnimationsModule,i.MatAutocompleteModule,l.MatButtonModule,c.MatButtonToggleModule,d.MatCardModule,p.MatCheckboxModule,u.MatDatepickerModule,s.MatExpansionModule,f.MatInputModule,m.MatNativeDateModule,g.MatRadioModule,y.MatSelectModule],K)})],e)}();e.ArrayOptions=function(e){return Reflect.metadata(P,Object.assign({},e))},e.ArrayOptionsSymbol=P,e.AutocompleteOptions=function(e){return Reflect.metadata(q,{autocomplete:Object.assign({},e)})},e.AutocompleteSymbol=q,e.ChoiceOptions=function(e){return Reflect.metadata(D,Object.assign({maxChoices:1},{renderType:"select"},e))},e.ChoiceOptionsSymbol=D,e.FlexibleObjectArray=function(e){return Reflect.metadata(G,Object.assign({expandOptions:!1},e,{arrayType:"object"}))},e.FlexibleObjectArraySymbol=G,e.FormConfig=function(e){var n=null;return e.label&&(n=e.label.toLowerCase().replace(/[^\w\s-]/g,"").replace(/[\s_-]+/g,"-").replace(/^-+|-+$/g,"")),Reflect.metadata(N,Object.assign({hiderHeader:!1,slug:n},e))},e.FormConfigSymbol=N,e.HbFormArrayComponent=F,e.HbFormMatArrayComponent=I,e.HbFormMatObjectComponent=M,e.HbFormMatWidgetComponent=w,e.HbFormModule=Z,e.HbFormObjectComponent=j,e.HbFormWidgetComponent=O,e.MapToIterable=z,e.MatExtraOptions=function(e){return Reflect.metadata(L,Object.assign({},e))},e.MatExtraOptionsSymbol=L,e.MultipleChoicesOptions=function(e){return Reflect.metadata($,Object.assign({arrayType:"enum"},{maxChoices:null},e))},e.MultipleChoicesOptionsSymbol=$,e.Ng2FormFactory=W,e.NonPrimitiveTypeMeta=V,e.ObjectAttributeTypeExtractor=B,e.ObjectOptions=function(e){return Reflect.metadata(E,Object.assign({},e))},e.ObjectOptionsSymbol=E,e.OnOATResolved=S,e.OptionWrapper=H,e.PrimitiveTypeMeta=_,e.SetupConfig=function(){return S(U)},e.TypeMeta=A,e.onOATResolved=U,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=hb-ng-form.umd.min.js.map